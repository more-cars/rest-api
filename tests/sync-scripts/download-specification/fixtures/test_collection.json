[
  {
    "id": "MCA-552",
    "parent_id": "MCA-551",
    "title": "Expecting read-only properties to be ignored when creating a COMPANY",
    "gherkin": "When the user creates a \"COMPANY\" \"BMW AG\" with the following data\n  | key | value | datatype |\n  | name | BMW AG | string |\n  | founded | 1916 | number |\n  | defunct |  | number |\n  | headquarters_location | Munich | string |\n  | legal_headquarters_location | Munich | string |\n  | id         | 1234       | number |\n  | created_at | 2025-01-01 | string |\n  | updated_at | 2025-01-01 | string |\nThen the response should contain the following keys\n  | id         |\n  | created_at |\n  | updated_at |\nBut the response should NOT contain the following properties\n  | id         | 1234       |\n  | created_at | 2025-01-01 |\n  | updated_at | 2025-01-01 |",
    "labels": [
      "implemented"
    ]
  },
  {
    "id": "MCA-550",
    "parent_id": "MCA-549",
    "title": "Expecting unknown properties to be ignored when creating a COMPANY",
    "gherkin": "When the user creates a \"COMPANY\" \"BMW AG\" with the following data\n  | key | value | datatype |\n  | name | BMW AG | string |\n  | founded | 1916 | number |\n  | defunct |  | number |\n  | headquarters_location | Munich | string |\n  | legal_headquarters_location | Munich | string |\n  | thimbleweed | park | string |\nThen the response should contain the following properties\n  | key | value |\n  | name | BMW AG |\n  | founded | 1916 |\n  | defunct |  |\n  | headquarters_location | Munich |\n  | legal_headquarters_location | Munich |\nAnd the response should NOT contain the following keys\n  | key         |\n  | thimbleweed |",
    "labels": [
      "implemented"
    ]
  },
  {
    "id": "MCA-548",
    "parent_id": "MCA-546",
    "title": "Expecting empty properties to be returned as null values when creating a COMPANY",
    "gherkin": "When the user creates a \"COMPANY\" \"BMW AG\" with the following data\n  | key | value | datatype |\n  | name | BMW AG | string |\nThen the response should contain the following properties\n  | key | value |\n  | name | BMW AG |\n  | founded | |\n  | defunct | |\n  | headquarters_location | |\n  | legal_headquarters_location | |",
    "labels": [
      "implemented"
    ]
  },
  {
    "id": "MCA-547",
    "parent_id": "MCA-546",
    "title": "Expecting all properties to be returned when creating a COMPANY",
    "gherkin": "When the user creates a \"COMPANY\" \"BMW AG\" with the following data\n  | key | value | datatype |\n  | name | BMW AG | string |\n  | founded | 1916 | number |\n  | defunct |  | number |\n  | headquarters_location | Munich | string |\n  | legal_headquarters_location | Munich | string |\nThen the response should contain the following properties\n  | key | value |\n  | name | BMW AG |\n  | founded | 1916 |\n  | defunct |  |\n  | headquarters_location | Munich |\n  | legal_headquarters_location | Munich |",
    "labels": [
      "implemented"
    ]
  },
  {
    "id": "MCA-545",
    "parent_id": "MCA-542",
    "title": "Trying to create a COMPANY with malformed data",
    "gherkin": "When the user tries to create a \"COMPANY\" \"BMW AG\" with the following data\n  | key | value | datatype |\n  | name | ;BMW AG | string |\n  | founded | ;1916 | number |\n  | defunct | ; | number |\n  | headquarters_location | ;Munich | string |\n  | legal_headquarters_location | ;Munich | string |\nThen the response should return with status code 400",
    "labels": [
      "implemented"
    ]
  },
  {
    "id": "MCA-544",
    "parent_id": "MCA-542",
    "title": "Trying to create a COMPANY with invalid data types",
    "gherkin": "When the user tries to create a \"COMPANY\" \"BMW AG\" with the following data\n  | key | value | datatype |\n  | name | BMW AG | boolean |\n  | founded | 1916 | boolean |\n  | defunct |  | boolean |\n  | headquarters_location | Munich | boolean |\n  | legal_headquarters_location | Munich | boolean |\nThen the response should return with status code 400",
    "labels": [
      "implemented"
    ]
  },
  {
    "id": "MCA-543",
    "parent_id": "MCA-542",
    "title": "Trying to create a COMPANY with missing mandatory information",
    "gherkin": "When the user tries to create a \"COMPANY\" \"BMW AG\" with the following data\n  | key | value | datatype |\nThen the response should return with status code 400",
    "labels": [
      "implemented"
    ]
  },
  {
    "id": "MCA-541",
    "parent_id": "MCA-540",
    "title": "Creating a COMPANY with valid data",
    "gherkin": "When the user creates a \"COMPANY\" \"BMW AG\" with the following data\n  | key | value | datatype |\n  | name | BMW AG | string |\n  | founded | 1916 | number |\n  | defunct |  | number |\n  | headquarters_location | Munich | string |\n  | legal_headquarters_location | Munich | string |\nThen the response should return the \"COMPANY\" \"BMW AG\"\nAnd the response should return with status code 201",
    "labels": [
      "implemented"
    ]
  },
  {
    "id": "MCA-473",
    "parent_id": "MCA-387",
    "title": "Expecting the response to contain pagination meta information even when no specific page was requested",
    "gherkin": "When the user requests the \"<node_type>\" collection\nThen the response should return with status code 200\nAnd the request should contain pagination meta information\n\nExamples:\n  | node_type |\n  | BRAND     |\n  | CAR_MODEL |\n  | IMAGE     |",
    "labels": []
  },
  {
    "id": "MCA-472",
    "parent_id": "MCA-386",
    "title": "Expecting the response to contain pagination meta information when a specific page was requested",
    "gherkin": "When the user requests page 1 of the \"<node_type>\" collection\nThen the response should return with status code 200\nAnd the request should contain pagination meta information\n\nExamples:\n  | node_type |\n  | BRAND     |\n  | CAR_MODEL |\n  | IMAGE     |",
    "labels": []
  }
]
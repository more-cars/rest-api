[
  {
    "expand": "renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations",
    "id": "20059",
    "self": "https://dennis-gerike.atlassian.net/rest/api/3/issue/20059",
    "key": "MCA-539",
    "fields": {
      "summary": "Create COMPANY Node",
      "customfield_10731": "/company",
      "customfield_10732": {
        "self": "https://dennis-gerike.atlassian.net/rest/api/3/customFieldOption/10187",
        "value": "POST",
        "id": "10187"
      },
      "customfield_10767": [
        {
          "self": "https://dennis-gerike.atlassian.net/rest/api/3/customFieldOption/10220",
          "value": "201",
          "id": "10220"
        },
        {
          "self": "https://dennis-gerike.atlassian.net/rest/api/3/customFieldOption/10221",
          "value": "400",
          "id": "10221"
        }
      ],
      "created": "2025-09-11T10:17:26.225+0200",
      "customfield_10691": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "As an API contributor\nI want to be able to create COMPANY nodes\nSo I can fill gaps in the database"
              }
            ]
          }
        ]
      },
      "description": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "A COMPANY node is successfully created when requested with valid data. The required data structure is specified in parent (epic) ticket MCA-201. -> Status Code `201`"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "A successful request returns the created node with all specified properties."
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Properties are returned, even when they are empty (optional fields). They are returned with value `null`."
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Unknown properties are ignored. They are not processed. They do not produce any info, warning or error messages for the user. -> Status Code `201`"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Read-only properties (`id`, `created_at`, `updated_at`) are ignored. They are not processed. They do not produce any info, warning or error messages for the user. -> Status Code `201`"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Requests with invalid data are rejected. Cases for invalid data include: missing mandatory fields, syntax errors, wrong data types or wrong data structure. -> Status Code `400`"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "updated": "2025-09-12T19:28:26.423+0200"
    }
  },
  {
    "expand": "renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations",
    "id": "19695",
    "self": "https://dennis-gerike.atlassian.net/rest/api/3/issue/19695",
    "key": "MCA-392",
    "fields": {
      "summary": "Has CAR MODEL-belongs-to-BRAND Relationship",
      "customfield_10731": null,
      "customfield_10732": null,
      "customfield_10767": null,
      "created": "2025-08-22T17:14:16.237+0200",
      "customfield_10691": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "As a <ROLE>"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "I want to be able to <ACTION>"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "So I can <REASON>"
              }
            ]
          }
        ]
      },
      "description": null,
      "updated": "2025-08-22T17:14:16.869+0200"
    }
  },
  {
    "expand": "renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations",
    "id": "19692",
    "self": "https://dennis-gerike.atlassian.net/rest/api/3/issue/19692",
    "key": "MCA-391",
    "fields": {
      "summary": "Has CAR MODEL-is-predecessor Relationship",
      "customfield_10731": null,
      "customfield_10732": null,
      "customfield_10767": null,
      "created": "2025-08-22T17:13:53.775+0200",
      "customfield_10691": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "As a <ROLE>"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "I want to be able to <ACTION>"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "So I can <REASON>"
              }
            ]
          }
        ]
      },
      "description": null,
      "updated": "2025-08-22T17:13:54.494+0200"
    }
  },
  {
    "expand": "renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations",
    "id": "19690",
    "self": "https://dennis-gerike.atlassian.net/rest/api/3/issue/19690",
    "key": "MCA-390",
    "fields": {
      "summary": "Has CAR MODEL-has-successor Relationship",
      "customfield_10731": null,
      "customfield_10732": null,
      "customfield_10767": null,
      "created": "2025-08-22T17:12:14.487+0200",
      "customfield_10691": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "As a <ROLE>"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "I want to be able to <ACTION>"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "So I can <REASON>"
              }
            ]
          }
        ]
      },
      "description": null,
      "updated": "2025-08-22T17:13:33.021+0200"
    }
  },
  {
    "expand": "renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations",
    "id": "19689",
    "self": "https://dennis-gerike.atlassian.net/rest/api/3/issue/19689",
    "key": "MCA-389",
    "fields": {
      "summary": "Get CAR MODEL-has-IMAGE Relationship",
      "customfield_10731": "/car-models/<car-model-id>/has-image",
      "customfield_10732": {
        "self": "https://dennis-gerike.atlassian.net/rest/api/3/customFieldOption/10186",
        "value": "GET",
        "id": "10186"
      },
      "customfield_10767": [
        {
          "self": "https://dennis-gerike.atlassian.net/rest/api/3/customFieldOption/10219",
          "value": "200",
          "id": "10219"
        },
        {
          "self": "https://dennis-gerike.atlassian.net/rest/api/3/customFieldOption/10222",
          "value": "404",
          "id": "10222"
        }
      ],
      "created": "2025-08-22T16:01:57.346+0200",
      "customfield_10691": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "As an API contributor"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "I want to be able to request the relationship between a CAR MODEL and an IMAGE"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "So I can find out if they are already connected or not"
              }
            ]
          }
        ]
      },
      "description": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "the requested relationship is returned when it actually exists → status code "
                      },
                      {
                        "type": "text",
                        "text": "200",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "requirements: the car model, the image and the relationship between both nodes exist"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "response: a JSON containing the following relationship data:"
                              }
                            ]
                          },
                          {
                            "type": "bulletList",
                            "content": [
                              {
                                "type": "listItem",
                                "content": [
                                  {
                                    "type": "paragraph",
                                    "content": [
                                      {
                                        "type": "text",
                                        "text": "car_model_id",
                                        "marks": [
                                          {
                                            "type": "code"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "text",
                                        "text": ": integer"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "listItem",
                                "content": [
                                  {
                                    "type": "paragraph",
                                    "content": [
                                      {
                                        "type": "text",
                                        "text": "image_id",
                                        "marks": [
                                          {
                                            "type": "code"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "text",
                                        "text": ": integer"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "listItem",
                                "content": [
                                  {
                                    "type": "paragraph",
                                    "content": [
                                      {
                                        "type": "text",
                                        "text": "relationship_id",
                                        "marks": [
                                          {
                                            "type": "code"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "text",
                                        "text": ": integer"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "listItem",
                                "content": [
                                  {
                                    "type": "paragraph",
                                    "content": [
                                      {
                                        "type": "text",
                                        "text": "relationship_name",
                                        "marks": [
                                          {
                                            "type": "code"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "text",
                                        "text": ": string"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "listItem",
                                "content": [
                                  {
                                    "type": "paragraph",
                                    "content": [
                                      {
                                        "type": "text",
                                        "text": "created_at",
                                        "marks": [
                                          {
                                            "type": "code"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "text",
                                        "text": ": string"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "listItem",
                                "content": [
                                  {
                                    "type": "paragraph",
                                    "content": [
                                      {
                                        "type": "text",
                                        "text": "updated_at",
                                        "marks": [
                                          {
                                            "type": "code"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "text",
                                        "text": ": string"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "the relationship retrieval fails with status code "
                      },
                      {
                        "type": "text",
                        "text": "404",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      },
                      {
                        "type": "text",
                        "text": " when the provided data was not valid:"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "a "
                              },
                              {
                                "type": "text",
                                "text": "car model",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": " with the given ID was not found"
                              }
                            ]
                          },
                          {
                            "type": "bulletList",
                            "content": [
                              {
                                "type": "listItem",
                                "content": [
                                  {
                                    "type": "paragraph",
                                    "content": [
                                      {
                                        "type": "text",
                                        "text": "node with given ID exists, but is not a "
                                      },
                                      {
                                        "type": "text",
                                        "text": "car model",
                                        "marks": [
                                          {
                                            "type": "code"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "an "
                              },
                              {
                                "type": "text",
                                "text": "image",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": " with the given ID was not found"
                              }
                            ]
                          },
                          {
                            "type": "bulletList",
                            "content": [
                              {
                                "type": "listItem",
                                "content": [
                                  {
                                    "type": "paragraph",
                                    "content": [
                                      {
                                        "type": "text",
                                        "text": "node with given ID exists, but is not an "
                                      },
                                      {
                                        "type": "text",
                                        "text": "image",
                                        "marks": [
                                          {
                                            "type": "code"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "the relationship between both nodes was not found"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 3
            },
            "content": [
              {
                "type": "text",
                "text": "NOT in scope for this iteration",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "proper JSON structure according to the JSON:API"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "returning the actual nodes (for now only the IDs)"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "updated": "2025-09-02T08:41:50.173+0200"
    }
  },
  {
    "expand": "renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations",
    "id": "19688",
    "self": "https://dennis-gerike.atlassian.net/rest/api/3/issue/19688",
    "key": "MCA-388",
    "fields": {
      "summary": "Has CAR MODEL-has-prime-image-IMAGE Relationship",
      "customfield_10731": "/car-models/<car-model-id>/has-prime-image/<image-id>",
      "customfield_10732": {
        "self": "https://dennis-gerike.atlassian.net/rest/api/3/customFieldOption/10186",
        "value": "GET",
        "id": "10186"
      },
      "customfield_10767": [
        {
          "self": "https://dennis-gerike.atlassian.net/rest/api/3/customFieldOption/10219",
          "value": "200",
          "id": "10219"
        },
        {
          "self": "https://dennis-gerike.atlassian.net/rest/api/3/customFieldOption/10222",
          "value": "404",
          "id": "10222"
        }
      ],
      "created": "2025-08-22T15:58:42.288+0200",
      "customfield_10691": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "As an API contributor"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "I want to find out if a specific IMAGE is already attached as prime image to a specific CAR MODEL"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "So I can find gaps in the database"
              }
            ]
          }
        ]
      },
      "description": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Specification"
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Requests are rejected with a "
                      },
                      {
                        "type": "text",
                        "text": "404",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      },
                      {
                        "type": "text",
                        "text": " error when the CAR MODEL, the IMAGE or both don't exist."
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Requests are rejected with a "
                      },
                      {
                        "type": "text",
                        "text": "404",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      },
                      {
                        "type": "text",
                        "text": " error when a node with the given ID actually exists, but does not have the correct type. The first node needs to be a CAR MODEL, the second an IMAGE."
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Requests are rejected with a "
                      },
                      {
                        "type": "text",
                        "text": "404",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      },
                      {
                        "type": "text",
                        "text": " error when no "
                      },
                      {
                        "type": "text",
                        "text": "has-prime-image",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      },
                      {
                        "type": "text",
                        "text": " relationship exists between both nodes."
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "The relationship is successfully returned when it actually exists. → Status code "
                      },
                      {
                        "type": "text",
                        "text": "200",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      },
                      {
                        "type": "text",
                        "text": "."
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "A JSON object with the relationship information is returned:"
                              }
                            ]
                          },
                          {
                            "type": "bulletList",
                            "content": [
                              {
                                "type": "listItem",
                                "content": [
                                  {
                                    "type": "paragraph",
                                    "content": [
                                      {
                                        "type": "text",
                                        "text": "car_model_id",
                                        "marks": [
                                          {
                                            "type": "code"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "text",
                                        "text": ": integer"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "listItem",
                                "content": [
                                  {
                                    "type": "paragraph",
                                    "content": [
                                      {
                                        "type": "text",
                                        "text": "image_id",
                                        "marks": [
                                          {
                                            "type": "code"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "text",
                                        "text": ": integer"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "listItem",
                                "content": [
                                  {
                                    "type": "paragraph",
                                    "content": [
                                      {
                                        "type": "text",
                                        "text": "relationship_id",
                                        "marks": [
                                          {
                                            "type": "code"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "text",
                                        "text": ": integer"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "listItem",
                                "content": [
                                  {
                                    "type": "paragraph",
                                    "content": [
                                      {
                                        "type": "text",
                                        "text": "relationship_name",
                                        "marks": [
                                          {
                                            "type": "code"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "text",
                                        "text": ": string → "
                                      },
                                      {
                                        "type": "text",
                                        "text": "has-prime-image",
                                        "marks": [
                                          {
                                            "type": "code"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "updated": "2025-09-06T16:04:06.732+0200"
    }
  },
  {
    "expand": "renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations",
    "id": "19668",
    "self": "https://dennis-gerike.atlassian.net/rest/api/3/issue/19668",
    "key": "MCA-381",
    "fields": {
      "summary": "Filter named node collection",
      "customfield_10731": null,
      "customfield_10732": null,
      "customfield_10767": null,
      "created": "2025-08-22T09:32:38.188+0200",
      "customfield_10691": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "As a <ROLE>"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "I want to be able to <ACTION>"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "So I can <REASON>"
              }
            ]
          }
        ]
      },
      "description": null,
      "updated": "2025-08-22T09:32:38.491+0200"
    }
  },
  {
    "expand": "renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations",
    "id": "19665",
    "self": "https://dennis-gerike.atlassian.net/rest/api/3/issue/19665",
    "key": "MCA-380",
    "fields": {
      "summary": "Filter node collection",
      "customfield_10731": null,
      "customfield_10732": null,
      "customfield_10767": null,
      "created": "2025-08-22T09:32:27.846+0200",
      "customfield_10691": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "As a <ROLE>"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "I want to be able to <ACTION>"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "So I can <REASON>"
              }
            ]
          }
        ]
      },
      "description": null,
      "updated": "2025-08-22T09:32:27.985+0200"
    }
  },
  {
    "expand": "renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations",
    "id": "19662",
    "self": "https://dennis-gerike.atlassian.net/rest/api/3/issue/19662",
    "key": "MCA-379",
    "fields": {
      "summary": "Get all IMAGE-is-prime-image-of-NODE Relationships",
      "customfield_10731": null,
      "customfield_10732": null,
      "customfield_10767": null,
      "created": "2025-08-21T14:15:25.759+0200",
      "customfield_10691": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "As a <ROLE>"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "I want to be able to <ACTION>"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "So I can <REASON>"
              }
            ]
          }
        ]
      },
      "description": null,
      "updated": "2025-08-21T14:15:26.364+0200"
    }
  },
  {
    "expand": "renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations",
    "id": "19659",
    "self": "https://dennis-gerike.atlassian.net/rest/api/3/issue/19659",
    "key": "MCA-378",
    "fields": {
      "summary": "Restore IMAGE Node",
      "customfield_10731": null,
      "customfield_10732": null,
      "customfield_10767": null,
      "created": "2025-08-21T14:08:27.695+0200",
      "customfield_10691": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "As a <ROLE>"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "I want to be able to <ACTION>"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "So I can <REASON>"
              }
            ]
          }
        ]
      },
      "description": null,
      "updated": "2025-08-21T14:08:28.361+0200"
    }
  },
  {
    "expand": "renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations",
    "id": "19656",
    "self": "https://dennis-gerike.atlassian.net/rest/api/3/issue/19656",
    "key": "MCA-377",
    "fields": {
      "summary": "Soft Delete IMAGE Node",
      "customfield_10731": null,
      "customfield_10732": null,
      "customfield_10767": null,
      "created": "2025-08-21T14:08:23.051+0200",
      "customfield_10691": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "As a <ROLE>"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "I want to be able to <ACTION>"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "So I can <REASON>"
              }
            ]
          }
        ]
      },
      "description": null,
      "updated": "2025-08-21T14:08:23.738+0200"
    }
  },
  {
    "expand": "renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations",
    "id": "19653",
    "self": "https://dennis-gerike.atlassian.net/rest/api/3/issue/19653",
    "key": "MCA-376",
    "fields": {
      "summary": "Restore BRAND Node",
      "customfield_10731": null,
      "customfield_10732": null,
      "customfield_10767": null,
      "created": "2025-08-21T13:51:08.515+0200",
      "customfield_10691": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "As a <ROLE>"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "I want to be able to <ACTION>"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "So I can <REASON>"
              }
            ]
          }
        ]
      },
      "description": null,
      "updated": "2025-08-21T13:51:09.112+0200"
    }
  },
  {
    "expand": "renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations",
    "id": "19650",
    "self": "https://dennis-gerike.atlassian.net/rest/api/3/issue/19650",
    "key": "MCA-375",
    "fields": {
      "summary": "Soft Delete BRAND Node",
      "customfield_10731": null,
      "customfield_10732": null,
      "customfield_10767": null,
      "created": "2025-08-21T13:50:46.868+0200",
      "customfield_10691": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "As a <ROLE>"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "I want to be able to <ACTION>"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "So I can <REASON>"
              }
            ]
          }
        ]
      },
      "description": null,
      "updated": "2025-08-21T13:50:47.545+0200"
    }
  },
  {
    "expand": "renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations",
    "id": "19623",
    "self": "https://dennis-gerike.atlassian.net/rest/api/3/issue/19623",
    "key": "MCA-374",
    "fields": {
      "summary": "Sort named node collection",
      "customfield_10731": null,
      "customfield_10732": null,
      "customfield_10767": null,
      "created": "2025-08-18T15:23:20.531+0200",
      "customfield_10691": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "As a <ROLE>"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "I want to be able to <ACTION>"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "So I can <REASON>"
              }
            ]
          }
        ]
      },
      "description": null,
      "updated": "2025-08-22T09:28:28.521+0200"
    }
  },
  {
    "expand": "renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations",
    "id": "19620",
    "self": "https://dennis-gerike.atlassian.net/rest/api/3/issue/19620",
    "key": "MCA-373",
    "fields": {
      "summary": "Sort node collection",
      "customfield_10731": null,
      "customfield_10732": null,
      "customfield_10767": null,
      "created": "2025-08-18T15:23:12.308+0200",
      "customfield_10691": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "As a <ROLE>"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "I want to be able to <ACTION>"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "So I can <REASON>"
              }
            ]
          }
        ]
      },
      "description": null,
      "updated": "2025-08-22T09:27:41.702+0200"
    }
  },
  {
    "expand": "renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations",
    "id": "19616",
    "self": "https://dennis-gerike.atlassian.net/rest/api/3/issue/19616",
    "key": "MCA-371",
    "fields": {
      "summary": "Paginate named node collection",
      "customfield_10731": null,
      "customfield_10732": null,
      "customfield_10767": null,
      "created": "2025-08-18T15:21:56.467+0200",
      "customfield_10691": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "As a <ROLE>"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "I want to be able to <ACTION>"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "So I can <REASON>"
              }
            ]
          }
        ]
      },
      "description": null,
      "updated": "2025-08-22T09:28:21.006+0200"
    }
  },
  {
    "expand": "renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations",
    "id": "19612",
    "self": "https://dennis-gerike.atlassian.net/rest/api/3/issue/19612",
    "key": "MCA-369",
    "fields": {
      "summary": "Paginate node collection",
      "customfield_10731": "?page=<page>",
      "customfield_10732": {
        "self": "https://dennis-gerike.atlassian.net/rest/api/3/customFieldOption/10186",
        "value": "GET",
        "id": "10186"
      },
      "customfield_10767": [
        {
          "self": "https://dennis-gerike.atlassian.net/rest/api/3/customFieldOption/10219",
          "value": "200",
          "id": "10219"
        },
        {
          "self": "https://dennis-gerike.atlassian.net/rest/api/3/customFieldOption/10222",
          "value": "404",
          "id": "10222"
        },
        {
          "self": "https://dennis-gerike.atlassian.net/rest/api/3/customFieldOption/10223",
          "value": "422",
          "id": "10223"
        }
      ],
      "created": "2025-08-18T15:19:55.867+0200",
      "customfield_10691": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "As an API consumer"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "When requesting a list of NODEs (e.g. Images)"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "I want to fetch them in slices (instead of the whole collection at once)"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "So I don't have to wait for and parse a giant response object"
              }
            ]
          }
        ]
      },
      "description": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "The user should be able to restrict the amount of nodes that are returned in a collection. This is for performance reasons (loading thousands of nodes takes some time) and to make it easier for the user to work on the response objects. When requesting a collection the user should be provided with enough meta information to create an informed request (e.g. how many pages are there in total and how big are they)."
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Specification"
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "The parameter "
                      },
                      {
                        "type": "text",
                        "text": "page",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      },
                      {
                        "type": "text",
                        "text": " can be attached to every “get all nodes of node type” request, e.g. "
                      },
                      {
                        "type": "text",
                        "text": "GET /brands?page=3",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      },
                      {
                        "type": "text",
                        "text": "."
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Each full page returns "
                      },
                      {
                        "type": "text",
                        "text": "100",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      },
                      {
                        "type": "text",
                        "text": " items of the original collection (page size is fixed)."
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "The last page returns the remaining items (between "
                              },
                              {
                                "type": "text",
                                "text": "0",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": " and "
                              },
                              {
                                "type": "text",
                                "text": "100",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ")."
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Each page contains a different subset of the original collection."
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "When a valid page number was provided then the response returns with code "
                      },
                      {
                        "type": "text",
                        "text": "200",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      },
                      {
                        "type": "text",
                        "text": "."
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "Even when the collection is empty (which should only happen in edge cases)."
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "Page "
                              },
                              {
                                "type": "text",
                                "text": "1",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": " is always a valid page number, no matter how large the collection is."
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Page "
                      },
                      {
                        "type": "text",
                        "text": "0",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      },
                      {
                        "type": "text",
                        "text": " and negative page numbers lead to a "
                      },
                      {
                        "type": "text",
                        "text": "422",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      },
                      {
                        "type": "text",
                        "text": " error."
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Any value that is not a number (e.g. "
                      },
                      {
                        "type": "text",
                        "text": "page=three",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      },
                      {
                        "type": "text",
                        "text": ") leads to a "
                      },
                      {
                        "type": "text",
                        "text": "422",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      },
                      {
                        "type": "text",
                        "text": " error."
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "When a page is requested that is out-of-range then a "
                      },
                      {
                        "type": "text",
                        "text": "404",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      },
                      {
                        "type": "text",
                        "text": " error is returned (e.g. page 10 is requested, but there are only 8)."
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "The response returns additional meta data:"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "current page"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "page size"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "pages in total"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "items in total"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "The meta data is always returned, even when no pagination was requested."
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "The data structure of the returned items in the collection stays untouched."
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Scope & Limits"
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "The page size is static for now. Making it configurable comes later."
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "The collections are not explicitly sorted. The database decides the order. This might lead to duplicates across multiple pages. This will be tackled in a different ticket."
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "What happens when providing the page parameter multiple times? Depends on how Express.js handles this case. TBD."
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Collisions between meta information and collection data is possible, e.g. field “pages” in node type “Book”. Will be tackled in a separate ticket."
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "updated": "2025-08-31T19:50:48.830+0200"
    }
  },
  {
    "expand": "renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations",
    "id": "19608",
    "self": "https://dennis-gerike.atlassian.net/rest/api/3/issue/19608",
    "key": "MCA-367",
    "fields": {
      "summary": "Get CAR MODEL-is-predecessor Relationship",
      "customfield_10731": null,
      "customfield_10732": null,
      "customfield_10767": null,
      "created": "2025-08-17T16:42:12.429+0200",
      "customfield_10691": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "As a <ROLE>"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "I want to be able to <ACTION>"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "So I can <REASON>"
              }
            ]
          }
        ]
      },
      "description": null,
      "updated": "2025-08-17T16:42:13.109+0200"
    }
  },
  {
    "expand": "renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations",
    "id": "19605",
    "self": "https://dennis-gerike.atlassian.net/rest/api/3/issue/19605",
    "key": "MCA-366",
    "fields": {
      "summary": "Get CAR MODEL-has-successor Relationship",
      "customfield_10731": null,
      "customfield_10732": null,
      "customfield_10767": null,
      "created": "2025-08-17T16:41:52.929+0200",
      "customfield_10691": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "As a <ROLE>"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "I want to be able to <ACTION>"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "So I can <REASON>"
              }
            ]
          }
        ]
      },
      "description": null,
      "updated": "2025-08-22T17:12:15.449+0200"
    }
  },
  {
    "expand": "renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations",
    "id": "19602",
    "self": "https://dennis-gerike.atlassian.net/rest/api/3/issue/19602",
    "key": "MCA-365",
    "fields": {
      "summary": "Delete CAR MODEL-is-predecessor Relationship",
      "customfield_10731": null,
      "customfield_10732": null,
      "customfield_10767": null,
      "created": "2025-08-17T16:39:46.943+0200",
      "customfield_10691": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "As a <ROLE>"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "I want to be able to <ACTION>"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "So I can <REASON>"
              }
            ]
          }
        ]
      },
      "description": null,
      "updated": "2025-08-17T16:39:47.567+0200"
    }
  },
  {
    "expand": "renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations",
    "id": "19599",
    "self": "https://dennis-gerike.atlassian.net/rest/api/3/issue/19599",
    "key": "MCA-364",
    "fields": {
      "summary": "Delete CAR MODEL-has-successor Relationship",
      "customfield_10731": null,
      "customfield_10732": null,
      "customfield_10767": null,
      "created": "2025-08-17T16:39:29.327+0200",
      "customfield_10691": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "As a <ROLE>"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "I want to be able to <ACTION>"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "So I can <REASON>"
              }
            ]
          }
        ]
      },
      "description": null,
      "updated": "2025-08-17T16:39:29.951+0200"
    }
  },
  {
    "expand": "renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations",
    "id": "19590",
    "self": "https://dennis-gerike.atlassian.net/rest/api/3/issue/19590",
    "key": "MCA-357",
    "fields": {
      "summary": "Restore CAR MODEL Node",
      "customfield_10731": null,
      "customfield_10732": null,
      "customfield_10767": null,
      "created": "2025-08-17T13:05:37.400+0200",
      "customfield_10691": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "As a <ROLE>"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "I want to be able to <ACTION>"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "So I can <REASON>"
              }
            ]
          }
        ]
      },
      "description": null,
      "updated": "2025-08-17T13:09:08.927+0200"
    }
  },
  {
    "expand": "renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations",
    "id": "19587",
    "self": "https://dennis-gerike.atlassian.net/rest/api/3/issue/19587",
    "key": "MCA-356",
    "fields": {
      "summary": "Soft Delete CAR MODEL Node",
      "customfield_10731": null,
      "customfield_10732": null,
      "customfield_10767": null,
      "created": "2025-08-17T13:05:11.625+0200",
      "customfield_10691": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "As a <ROLE>"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "I want to be able to <ACTION>"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "So I can <REASON>"
              }
            ]
          }
        ]
      },
      "description": null,
      "updated": "2025-08-17T13:09:01.874+0200"
    }
  },
  {
    "expand": "renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations",
    "id": "19285",
    "self": "https://dennis-gerike.atlassian.net/rest/api/3/issue/19285",
    "key": "MCA-298",
    "fields": {
      "summary": "Create CAR MODEL-is-predecessor Relationship",
      "customfield_10731": null,
      "customfield_10732": null,
      "customfield_10767": null,
      "created": "2025-07-24T16:20:28.392+0200",
      "customfield_10691": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "As a <ROLE>"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "I want to be able to <ACTION>"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "So I can <REASON>"
              }
            ]
          }
        ]
      },
      "description": null,
      "updated": "2025-08-17T16:38:56.907+0200"
    }
  },
  {
    "expand": "renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations",
    "id": "19282",
    "self": "https://dennis-gerike.atlassian.net/rest/api/3/issue/19282",
    "key": "MCA-297",
    "fields": {
      "summary": "Create CAR MODEL-has-successor Relationship",
      "customfield_10731": null,
      "customfield_10732": null,
      "customfield_10767": null,
      "created": "2025-07-24T16:20:06.789+0200",
      "customfield_10691": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "As a <ROLE>"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "I want to be able to <ACTION>"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "So I can <REASON>"
              }
            ]
          }
        ]
      },
      "description": null,
      "updated": "2025-08-17T16:38:41.419+0200"
    }
  },
  {
    "expand": "renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations",
    "id": "19279",
    "self": "https://dennis-gerike.atlassian.net/rest/api/3/issue/19279",
    "key": "MCA-296",
    "fields": {
      "summary": "Delete IMAGE-is-prime-image-of-NODE Relationship",
      "customfield_10731": null,
      "customfield_10732": null,
      "customfield_10767": null,
      "created": "2025-07-24T16:14:09.671+0200",
      "customfield_10691": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "As a <ROLE>"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "I want to be able to <ACTION>"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "So I can <REASON>"
              }
            ]
          }
        ]
      },
      "description": null,
      "updated": "2025-08-21T14:15:38.665+0200"
    }
  },
  {
    "expand": "renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations",
    "id": "19276",
    "self": "https://dennis-gerike.atlassian.net/rest/api/3/issue/19276",
    "key": "MCA-295",
    "fields": {
      "summary": "Get IMAGE-is-prime-image-of-NODE Relationship by ID",
      "customfield_10731": null,
      "customfield_10732": null,
      "customfield_10767": null,
      "created": "2025-07-24T16:13:58.383+0200",
      "customfield_10691": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "As a <ROLE>"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "I want to be able to <ACTION>"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "So I can <REASON>"
              }
            ]
          }
        ]
      },
      "description": null,
      "updated": "2025-08-21T14:15:11.443+0200"
    }
  },
  {
    "expand": "renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations",
    "id": "19273",
    "self": "https://dennis-gerike.atlassian.net/rest/api/3/issue/19273",
    "key": "MCA-294",
    "fields": {
      "summary": "Get CAR MODEL-has-prime-image Relationship",
      "customfield_10731": "/car-models/<car-model-id>/has-prime-image",
      "customfield_10732": {
        "self": "https://dennis-gerike.atlassian.net/rest/api/3/customFieldOption/10186",
        "value": "GET",
        "id": "10186"
      },
      "customfield_10767": [
        {
          "self": "https://dennis-gerike.atlassian.net/rest/api/3/customFieldOption/10219",
          "value": "200",
          "id": "10219"
        },
        {
          "self": "https://dennis-gerike.atlassian.net/rest/api/3/customFieldOption/10222",
          "value": "404",
          "id": "10222"
        }
      ],
      "created": "2025-07-24T15:49:14.407+0200",
      "customfield_10691": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "As an API consumer"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "I want to be able to request the prime IMAGE for a CAR MODEL"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "So I can represent the node in the best possible form in the frontend"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "(Because I don't know which one from the image gallery is the best one)"
              }
            ]
          }
        ]
      },
      "description": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Specification"
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Requests are rejected with a "
                      },
                      {
                        "type": "text",
                        "text": "404",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      },
                      {
                        "type": "text",
                        "text": " error when the CAR MODEL doesn't exist."
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Requests are rejected with a "
                      },
                      {
                        "type": "text",
                        "text": "404",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      },
                      {
                        "type": "text",
                        "text": " error when a node with the given ID actually exists, but is not a CAR MODEL."
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "The relationship is successfully returned when one actually exists. → Status code "
                      },
                      {
                        "type": "text",
                        "text": "200",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      },
                      {
                        "type": "text",
                        "text": "."
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "A JSON object with the relationship information is returned:"
                              }
                            ]
                          },
                          {
                            "type": "bulletList",
                            "content": [
                              {
                                "type": "listItem",
                                "content": [
                                  {
                                    "type": "paragraph",
                                    "content": [
                                      {
                                        "type": "text",
                                        "text": "car_model_id",
                                        "marks": [
                                          {
                                            "type": "code"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "text",
                                        "text": ": integer"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "listItem",
                                "content": [
                                  {
                                    "type": "paragraph",
                                    "content": [
                                      {
                                        "type": "text",
                                        "text": "image_id",
                                        "marks": [
                                          {
                                            "type": "code"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "text",
                                        "text": ": integer"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "listItem",
                                "content": [
                                  {
                                    "type": "paragraph",
                                    "content": [
                                      {
                                        "type": "text",
                                        "text": "relationship_id",
                                        "marks": [
                                          {
                                            "type": "code"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "text",
                                        "text": ": integer"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "listItem",
                                "content": [
                                  {
                                    "type": "paragraph",
                                    "content": [
                                      {
                                        "type": "text",
                                        "text": "relationship_name",
                                        "marks": [
                                          {
                                            "type": "code"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "text",
                                        "text": ": string → "
                                      },
                                      {
                                        "type": "text",
                                        "text": "has-prime-image",
                                        "marks": [
                                          {
                                            "type": "code"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "When there exists no "
                      },
                      {
                        "type": "text",
                        "text": "has-prime-image",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      },
                      {
                        "type": "text",
                        "text": " relationship for the CAR MODEL then an empty response is returned. → Status code "
                      },
                      {
                        "type": "text",
                        "text": "200",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      },
                      {
                        "type": "text",
                        "text": "."
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "updated": "2025-09-06T16:04:04.552+0200"
    }
  },
  {
    "expand": "renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations",
    "id": "19270",
    "self": "https://dennis-gerike.atlassian.net/rest/api/3/issue/19270",
    "key": "MCA-293",
    "fields": {
      "summary": "Delete CAR MODEL-has-prime-image-IMAGE Relationship",
      "customfield_10731": "/car-models/<car-model-id>/has-prime-image/<image-id>",
      "customfield_10732": {
        "self": "https://dennis-gerike.atlassian.net/rest/api/3/customFieldOption/10189",
        "value": "DELETE",
        "id": "10189"
      },
      "customfield_10767": [
        {
          "self": "https://dennis-gerike.atlassian.net/rest/api/3/customFieldOption/10285",
          "value": "204",
          "id": "10285"
        },
        {
          "self": "https://dennis-gerike.atlassian.net/rest/api/3/customFieldOption/10222",
          "value": "404",
          "id": "10222"
        }
      ],
      "created": "2025-07-24T15:48:49.366+0200",
      "customfield_10691": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "As an API contributor"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "I want to be able to detach the prime IMAGE from a CAR MODEL"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "So I can clean up bad data or test data"
              }
            ]
          }
        ]
      },
      "description": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Expected Behavior"
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Requests are rejected with a "
                      },
                      {
                        "type": "text",
                        "text": "404",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      },
                      {
                        "type": "text",
                        "text": " error when the CAR MODEL, the IMAGE or both don't exist."
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Requests are rejected with a "
                      },
                      {
                        "type": "text",
                        "text": "404",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      },
                      {
                        "type": "text",
                        "text": " error when a node with the given ID actually exists, but does not have the correct type. The first node needs to be a CAR MODEL, the second an IMAGE."
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Requests are rejected with a "
                      },
                      {
                        "type": "text",
                        "text": "404",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      },
                      {
                        "type": "text",
                        "text": " error when no "
                      },
                      {
                        "type": "text",
                        "text": "has-prime-image",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      },
                      {
                        "type": "text",
                        "text": " relationship exists between both nodes."
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "The relationship is successfully deleted when it actually exists. → Status code "
                      },
                      {
                        "type": "text",
                        "text": "204",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      },
                      {
                        "type": "text",
                        "text": "."
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Scope & Limits"
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "No authorization at the moment. Everyone can delete the relationship."
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "updated": "2025-09-06T15:30:07.624+0200"
    }
  },
  {
    "expand": "renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations",
    "id": "19267",
    "self": "https://dennis-gerike.atlassian.net/rest/api/3/issue/19267",
    "key": "MCA-292",
    "fields": {
      "summary": "Create CAR MODEL-has-prime-image-IMAGE Relationship",
      "customfield_10731": "/car-models/<car-model-id>/has-prime-image/<image-id>",
      "customfield_10732": {
        "self": "https://dennis-gerike.atlassian.net/rest/api/3/customFieldOption/10187",
        "value": "POST",
        "id": "10187"
      },
      "customfield_10767": [
        {
          "self": "https://dennis-gerike.atlassian.net/rest/api/3/customFieldOption/10220",
          "value": "201",
          "id": "10220"
        },
        {
          "self": "https://dennis-gerike.atlassian.net/rest/api/3/customFieldOption/10222",
          "value": "404",
          "id": "10222"
        }
      ],
      "created": "2025-07-24T15:48:28.677+0200",
      "customfield_10691": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "As an API contributor"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "I want to be able to select one IMAGE for a CAR MODEL to be used as prime image"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "So the node has an ideal visual representation in any frontend application"
              }
            ]
          }
        ]
      },
      "description": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Specification"
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Requests are rejected with a "
                      },
                      {
                        "type": "text",
                        "text": "404",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      },
                      {
                        "type": "text",
                        "text": " error when the CAR MODEL, the IMAGE or both don't exist."
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Requests are rejected with a "
                      },
                      {
                        "type": "text",
                        "text": "404",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      },
                      {
                        "type": "text",
                        "text": " error when a node with the given ID actually exists, but does not have the correct type. The first node needs to be a CAR MODEL, the second an IMAGE."
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "The relationship is successfully created when both nodes exist and are from the correct type. → Status code "
                      },
                      {
                        "type": "text",
                        "text": "201",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      },
                      {
                        "type": "text",
                        "text": "."
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "A JSON object is returned confirming that both entities have been connected:"
                              }
                            ]
                          },
                          {
                            "type": "bulletList",
                            "content": [
                              {
                                "type": "listItem",
                                "content": [
                                  {
                                    "type": "paragraph",
                                    "content": [
                                      {
                                        "type": "text",
                                        "text": "car_model_id",
                                        "marks": [
                                          {
                                            "type": "code"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "text",
                                        "text": ": integer"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "listItem",
                                "content": [
                                  {
                                    "type": "paragraph",
                                    "content": [
                                      {
                                        "type": "text",
                                        "text": "image_id",
                                        "marks": [
                                          {
                                            "type": "code"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "text",
                                        "text": ": integer"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "listItem",
                                "content": [
                                  {
                                    "type": "paragraph",
                                    "content": [
                                      {
                                        "type": "text",
                                        "text": "relationship_id",
                                        "marks": [
                                          {
                                            "type": "code"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "text",
                                        "text": ": integer"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "listItem",
                                "content": [
                                  {
                                    "type": "paragraph",
                                    "content": [
                                      {
                                        "type": "text",
                                        "text": "relationship_name",
                                        "marks": [
                                          {
                                            "type": "code"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "text",
                                        "text": ": string → "
                                      },
                                      {
                                        "type": "text",
                                        "text": "has-prime-image",
                                        "marks": [
                                          {
                                            "type": "code"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "The user can trigger the creation of the same relationship multiple times. The result is always the same:"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "same status code"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "same structure"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "same data"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "same relationship ID",
                                "marks": [
                                  {
                                    "type": "strong"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "⚠️ The relationship may not be deleted in the process! The app has to return the already existing relationship!"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "A CAR MODEL can only have "
                      },
                      {
                        "type": "text",
                        "text": "one",
                        "marks": [
                          {
                            "type": "strong"
                          }
                        ]
                      },
                      {
                        "type": "text",
                        "text": " prime IMAGE, not multiple."
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "Creating a different relationship automatically deletes the previous relationship."
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Scope & Limits"
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "No authorization at the moment. Everyone can create the relationship."
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "TBD: Can the prime image be every image? Does it have to come from the image gallery? Is it added automatically to the gallery, if not?"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "updated": "2025-09-02T09:08:42.661+0200"
    }
  },
  {
    "expand": "renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations",
    "id": "19261",
    "self": "https://dennis-gerike.atlassian.net/rest/api/3/issue/19261",
    "key": "MCA-290",
    "fields": {
      "summary": "Delete BRAND-has-CAR MODEL Relationship",
      "customfield_10731": null,
      "customfield_10732": null,
      "customfield_10767": null,
      "created": "2025-07-24T14:58:47.364+0200",
      "customfield_10691": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "As a <ROLE>"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "I want to be able to <ACTION>"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "So I can <REASON>"
              }
            ]
          }
        ]
      },
      "description": null,
      "updated": "2025-08-21T13:55:08.891+0200"
    }
  },
  {
    "expand": "renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations",
    "id": "19258",
    "self": "https://dennis-gerike.atlassian.net/rest/api/3/issue/19258",
    "key": "MCA-289",
    "fields": {
      "summary": "Delete BRAND-has-IMAGE Relationship",
      "customfield_10731": null,
      "customfield_10732": null,
      "customfield_10767": null,
      "created": "2025-07-24T14:58:22.960+0200",
      "customfield_10691": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "As a <ROLE>"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "I want to be able to <ACTION>"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "So I can <REASON>"
              }
            ]
          }
        ]
      },
      "description": null,
      "updated": "2025-08-21T13:56:43.763+0200"
    }
  },
  {
    "expand": "renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations",
    "id": "19254",
    "self": "https://dennis-gerike.atlassian.net/rest/api/3/issue/19254",
    "key": "MCA-287",
    "fields": {
      "summary": "Delete CAR MODEL-has-IMAGE Relationship",
      "customfield_10731": null,
      "customfield_10732": null,
      "customfield_10767": null,
      "created": "2025-07-24T12:34:01.441+0200",
      "customfield_10691": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "As a <ROLE>"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "I want to be able to <ACTION>"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "So I can <REASON>"
              }
            ]
          }
        ]
      },
      "description": null,
      "updated": "2025-08-17T16:44:23.892+0200"
    }
  },
  {
    "expand": "renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations",
    "id": "19251",
    "self": "https://dennis-gerike.atlassian.net/rest/api/3/issue/19251",
    "key": "MCA-286",
    "fields": {
      "summary": "Delete CAR MODEL-belongs-to-BRAND Relationship",
      "customfield_10731": null,
      "customfield_10732": null,
      "customfield_10767": null,
      "created": "2025-07-24T12:33:40.389+0200",
      "customfield_10691": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "As a <ROLE>"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "I want to be able to <ACTION>"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "So I can <REASON>"
              }
            ]
          }
        ]
      },
      "description": null,
      "updated": "2025-08-17T16:42:57.599+0200"
    }
  },
  {
    "expand": "renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations",
    "id": "19221",
    "self": "https://dennis-gerike.atlassian.net/rest/api/3/issue/19221",
    "key": "MCA-285",
    "fields": {
      "summary": "Get BRAND-has-CAR MODEL Relationship by ID",
      "customfield_10731": "/brands/<brand-id>/has-car-model/<car-model-id>",
      "customfield_10732": {
        "self": "https://dennis-gerike.atlassian.net/rest/api/3/customFieldOption/10186",
        "value": "GET",
        "id": "10186"
      },
      "customfield_10767": [
        {
          "self": "https://dennis-gerike.atlassian.net/rest/api/3/customFieldOption/10219",
          "value": "200",
          "id": "10219"
        },
        {
          "self": "https://dennis-gerike.atlassian.net/rest/api/3/customFieldOption/10222",
          "value": "404",
          "id": "10222"
        }
      ],
      "created": "2025-07-20T11:25:41.915+0200",
      "customfield_10691": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "As an API contributor"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "I want to be able to request the relationship between a BRAND and a CAR MODEL"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "So I can find out if they are already connected or not"
              }
            ]
          }
        ]
      },
      "description": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "the requested relationship is returned when it actually exists → status code "
                      },
                      {
                        "type": "text",
                        "text": "200",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "requirements: the brand, the car model and the relationship between both nodes exist"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "response: a JSON containing the following relationship data:"
                              }
                            ]
                          },
                          {
                            "type": "bulletList",
                            "content": [
                              {
                                "type": "listItem",
                                "content": [
                                  {
                                    "type": "paragraph",
                                    "content": [
                                      {
                                        "type": "text",
                                        "text": "brand_id",
                                        "marks": [
                                          {
                                            "type": "code"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "text",
                                        "text": ": integer"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "listItem",
                                "content": [
                                  {
                                    "type": "paragraph",
                                    "content": [
                                      {
                                        "type": "text",
                                        "text": "car_model_id",
                                        "marks": [
                                          {
                                            "type": "code"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "text",
                                        "text": ": integer"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "listItem",
                                "content": [
                                  {
                                    "type": "paragraph",
                                    "content": [
                                      {
                                        "type": "text",
                                        "text": "relationship_id",
                                        "marks": [
                                          {
                                            "type": "code"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "text",
                                        "text": ": integer"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "listItem",
                                "content": [
                                  {
                                    "type": "paragraph",
                                    "content": [
                                      {
                                        "type": "text",
                                        "text": "relationship_name",
                                        "marks": [
                                          {
                                            "type": "code"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "text",
                                        "text": ": string"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "listItem",
                                "content": [
                                  {
                                    "type": "paragraph",
                                    "content": [
                                      {
                                        "type": "text",
                                        "text": "created_at",
                                        "marks": [
                                          {
                                            "type": "code"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "text",
                                        "text": ": string"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "listItem",
                                "content": [
                                  {
                                    "type": "paragraph",
                                    "content": [
                                      {
                                        "type": "text",
                                        "text": "updated_at",
                                        "marks": [
                                          {
                                            "type": "code"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "text",
                                        "text": ": string"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "the relationship retrieval fails with status code "
                      },
                      {
                        "type": "text",
                        "text": "404",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      },
                      {
                        "type": "text",
                        "text": " when the provided data was not valid:"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "a "
                              },
                              {
                                "type": "text",
                                "text": "brand",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": " with the given ID was not found"
                              }
                            ]
                          },
                          {
                            "type": "bulletList",
                            "content": [
                              {
                                "type": "listItem",
                                "content": [
                                  {
                                    "type": "paragraph",
                                    "content": [
                                      {
                                        "type": "text",
                                        "text": "node with given ID exists, but is not a "
                                      },
                                      {
                                        "type": "text",
                                        "text": "brand",
                                        "marks": [
                                          {
                                            "type": "code"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "a "
                              },
                              {
                                "type": "text",
                                "text": "car model",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": " with the given ID was not found"
                              }
                            ]
                          },
                          {
                            "type": "bulletList",
                            "content": [
                              {
                                "type": "listItem",
                                "content": [
                                  {
                                    "type": "paragraph",
                                    "content": [
                                      {
                                        "type": "text",
                                        "text": "node with given ID exists, but is not a "
                                      },
                                      {
                                        "type": "text",
                                        "text": "car model",
                                        "marks": [
                                          {
                                            "type": "code"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "the relationship between both nodes was not found"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "updated": "2025-08-21T13:54:26.965+0200"
    }
  },
  {
    "expand": "renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations",
    "id": "19191",
    "self": "https://dennis-gerike.atlassian.net/rest/api/3/issue/19191",
    "key": "MCA-284",
    "fields": {
      "summary": "Get BRAND-has-IMAGE Relationship by ID",
      "customfield_10731": "/brands/<brand-id>/has-image/<image-id>",
      "customfield_10732": {
        "self": "https://dennis-gerike.atlassian.net/rest/api/3/customFieldOption/10186",
        "value": "GET",
        "id": "10186"
      },
      "customfield_10767": [
        {
          "self": "https://dennis-gerike.atlassian.net/rest/api/3/customFieldOption/10219",
          "value": "200",
          "id": "10219"
        },
        {
          "self": "https://dennis-gerike.atlassian.net/rest/api/3/customFieldOption/10222",
          "value": "404",
          "id": "10222"
        }
      ],
      "created": "2025-07-16T10:38:19.670+0200",
      "customfield_10691": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "As an API contributor"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "I want to be able to request the relationship between a BRAND and an IMAGE"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "So I can find out if they are already connected or not"
              }
            ]
          }
        ]
      },
      "description": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "the requested relationship is returned when it actually exists → status code "
                      },
                      {
                        "type": "text",
                        "text": "200",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "requirements: the "
                              },
                              {
                                "type": "text",
                                "text": "brand",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ", the "
                              },
                              {
                                "type": "text",
                                "text": "image",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": " and the "
                              },
                              {
                                "type": "text",
                                "text": "relationship",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": " between both nodes exist"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "response: a JSON containing the following relationship data:"
                              }
                            ]
                          },
                          {
                            "type": "bulletList",
                            "content": [
                              {
                                "type": "listItem",
                                "content": [
                                  {
                                    "type": "paragraph",
                                    "content": [
                                      {
                                        "type": "text",
                                        "text": "brand_id",
                                        "marks": [
                                          {
                                            "type": "code"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "text",
                                        "text": ": integer"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "listItem",
                                "content": [
                                  {
                                    "type": "paragraph",
                                    "content": [
                                      {
                                        "type": "text",
                                        "text": "image_id",
                                        "marks": [
                                          {
                                            "type": "code"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "text",
                                        "text": ": integer"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "listItem",
                                "content": [
                                  {
                                    "type": "paragraph",
                                    "content": [
                                      {
                                        "type": "text",
                                        "text": "relationship_id",
                                        "marks": [
                                          {
                                            "type": "code"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "text",
                                        "text": ": integer"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "listItem",
                                "content": [
                                  {
                                    "type": "paragraph",
                                    "content": [
                                      {
                                        "type": "text",
                                        "text": "relationship_name",
                                        "marks": [
                                          {
                                            "type": "code"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "text",
                                        "text": ": string"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "listItem",
                                "content": [
                                  {
                                    "type": "paragraph",
                                    "content": [
                                      {
                                        "type": "text",
                                        "text": "created_at",
                                        "marks": [
                                          {
                                            "type": "code"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "text",
                                        "text": ": string"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "listItem",
                                "content": [
                                  {
                                    "type": "paragraph",
                                    "content": [
                                      {
                                        "type": "text",
                                        "text": "updated_at",
                                        "marks": [
                                          {
                                            "type": "code"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "text",
                                        "text": ": string"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "the relationship retrieval fails with status code "
                      },
                      {
                        "type": "text",
                        "text": "404",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      },
                      {
                        "type": "text",
                        "text": " when the provided data was not valid:"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "a "
                              },
                              {
                                "type": "text",
                                "text": "brand",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": " with the given ID was not found"
                              }
                            ]
                          },
                          {
                            "type": "bulletList",
                            "content": [
                              {
                                "type": "listItem",
                                "content": [
                                  {
                                    "type": "paragraph",
                                    "content": [
                                      {
                                        "type": "text",
                                        "text": "node with given ID exists, but is not a "
                                      },
                                      {
                                        "type": "text",
                                        "text": "brand",
                                        "marks": [
                                          {
                                            "type": "code"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "an "
                              },
                              {
                                "type": "text",
                                "text": "image",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": " with the given ID was not found"
                              }
                            ]
                          },
                          {
                            "type": "bulletList",
                            "content": [
                              {
                                "type": "listItem",
                                "content": [
                                  {
                                    "type": "paragraph",
                                    "content": [
                                      {
                                        "type": "text",
                                        "text": "node with given ID exists, but is not an "
                                      },
                                      {
                                        "type": "text",
                                        "text": "image",
                                        "marks": [
                                          {
                                            "type": "code"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "the relationship between both nodes was not found"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 3
            },
            "content": [
              {
                "type": "text",
                "text": "NOT in scope for this iteration",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "proper JSON structure according to the JSON:API"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "returning the actual nodes (for now only the IDs)"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "updated": "2025-08-21T13:55:56.807+0200"
    }
  },
  {
    "expand": "renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations",
    "id": "19188",
    "self": "https://dennis-gerike.atlassian.net/rest/api/3/issue/19188",
    "key": "MCA-283",
    "fields": {
      "summary": "Has CAR MODEL-has-IMAGE Relationship",
      "customfield_10731": "/car-models/<car-model-id>/has-image/<image-id>",
      "customfield_10732": {
        "self": "https://dennis-gerike.atlassian.net/rest/api/3/customFieldOption/10186",
        "value": "GET",
        "id": "10186"
      },
      "customfield_10767": [
        {
          "self": "https://dennis-gerike.atlassian.net/rest/api/3/customFieldOption/10219",
          "value": "200",
          "id": "10219"
        },
        {
          "self": "https://dennis-gerike.atlassian.net/rest/api/3/customFieldOption/10222",
          "value": "404",
          "id": "10222"
        }
      ],
      "created": "2025-07-16T10:30:20.158+0200",
      "customfield_10691": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "As an API contributor"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "I want to be able to request the relationship between a CAR MODEL and an IMAGE"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "So I can find out if they are already connected or not"
              }
            ]
          }
        ]
      },
      "description": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "the requested relationship is returned when it actually exists → status code "
                      },
                      {
                        "type": "text",
                        "text": "200",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "requirements: the car model, the image and the relationship between both nodes exist"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "response: a JSON containing the following relationship data:"
                              }
                            ]
                          },
                          {
                            "type": "bulletList",
                            "content": [
                              {
                                "type": "listItem",
                                "content": [
                                  {
                                    "type": "paragraph",
                                    "content": [
                                      {
                                        "type": "text",
                                        "text": "car_model_id",
                                        "marks": [
                                          {
                                            "type": "code"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "text",
                                        "text": ": integer"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "listItem",
                                "content": [
                                  {
                                    "type": "paragraph",
                                    "content": [
                                      {
                                        "type": "text",
                                        "text": "image_id",
                                        "marks": [
                                          {
                                            "type": "code"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "text",
                                        "text": ": integer"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "listItem",
                                "content": [
                                  {
                                    "type": "paragraph",
                                    "content": [
                                      {
                                        "type": "text",
                                        "text": "relationship_id",
                                        "marks": [
                                          {
                                            "type": "code"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "text",
                                        "text": ": integer"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "listItem",
                                "content": [
                                  {
                                    "type": "paragraph",
                                    "content": [
                                      {
                                        "type": "text",
                                        "text": "relationship_name",
                                        "marks": [
                                          {
                                            "type": "code"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "text",
                                        "text": ": string"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "listItem",
                                "content": [
                                  {
                                    "type": "paragraph",
                                    "content": [
                                      {
                                        "type": "text",
                                        "text": "created_at",
                                        "marks": [
                                          {
                                            "type": "code"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "text",
                                        "text": ": string"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "listItem",
                                "content": [
                                  {
                                    "type": "paragraph",
                                    "content": [
                                      {
                                        "type": "text",
                                        "text": "updated_at",
                                        "marks": [
                                          {
                                            "type": "code"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "text",
                                        "text": ": string"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "the relationship retrieval fails with status code "
                      },
                      {
                        "type": "text",
                        "text": "404",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      },
                      {
                        "type": "text",
                        "text": " when the provided data was not valid:"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "a "
                              },
                              {
                                "type": "text",
                                "text": "car model",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": " with the given ID was not found"
                              }
                            ]
                          },
                          {
                            "type": "bulletList",
                            "content": [
                              {
                                "type": "listItem",
                                "content": [
                                  {
                                    "type": "paragraph",
                                    "content": [
                                      {
                                        "type": "text",
                                        "text": "node with given ID exists, but is not a "
                                      },
                                      {
                                        "type": "text",
                                        "text": "car model",
                                        "marks": [
                                          {
                                            "type": "code"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "an "
                              },
                              {
                                "type": "text",
                                "text": "image",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": " with the given ID was not found"
                              }
                            ]
                          },
                          {
                            "type": "bulletList",
                            "content": [
                              {
                                "type": "listItem",
                                "content": [
                                  {
                                    "type": "paragraph",
                                    "content": [
                                      {
                                        "type": "text",
                                        "text": "node with given ID exists, but is not an "
                                      },
                                      {
                                        "type": "text",
                                        "text": "image",
                                        "marks": [
                                          {
                                            "type": "code"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "the relationship between both nodes was not found"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 3
            },
            "content": [
              {
                "type": "text",
                "text": "NOT in scope for this iteration",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "proper JSON structure according to the JSON:API"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "returning the actual nodes (for now only the IDs)"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "updated": "2025-08-22T16:04:00.000+0200"
    }
  },
  {
    "expand": "renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations",
    "id": "18996",
    "self": "https://dennis-gerike.atlassian.net/rest/api/3/issue/18996",
    "key": "MCA-242",
    "fields": {
      "summary": "Get all BRAND-has-IMAGE Relationships",
      "customfield_10731": null,
      "customfield_10732": null,
      "customfield_10767": null,
      "created": "2025-06-27T11:09:41.784+0200",
      "customfield_10691": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "As an API consumer"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "I want to get all IMAGEs that are attached to a BRAND"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "So I can see their logo (resp. their different logos over the time)"
              }
            ]
          }
        ]
      },
      "description": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Request",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "method: "
                      },
                      {
                        "type": "text",
                        "text": "GET",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "URL path: "
                      },
                      {
                        "type": "text",
                        "text": "/brands/<brand-id>/has-image",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Response",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Happy path",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "positive HTTP status code (200)"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "a JSON array containing the following relationship data for each item:"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "brand_id",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": integer"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "image_id",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": integer"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "relationship_id",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": integer"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "relationship_name",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "created_at",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "updated_at",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Unhappy path",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "when there are no matches then an empty array is returned → status code 200"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "404 when brand does not exist"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Acceptance Criteria",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Behavior (Business Logic)",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "the relationships are successfully retrieved when provided with valid data"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "status code "
                              },
                              {
                                "type": "text",
                                "text": "200",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": " when brand was found"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "the relationship retrieval fails when the provided data was not valid"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "404",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": " when "
                              },
                              {
                                "type": "text",
                                "text": "brand",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": " was not found"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "when there exist no respective relationships then an empty list is returned"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "status code "
                              },
                              {
                                "type": "text",
                                "text": "200",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Quality Gates",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Unit+Integration tests (Jest) are extended"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Behavior tests (Cucumber) are added"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "OpenAPI spec is extended & schema is still valid"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Bruno collection is extended"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Performance tests are extended & existing tests are still green"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "NOT in scope for this iteration",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "proper JSON structure according to the JSON:API"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "updated": "2025-08-21T13:56:13.381+0200"
    }
  },
  {
    "expand": "renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations",
    "id": "18995",
    "self": "https://dennis-gerike.atlassian.net/rest/api/3/issue/18995",
    "key": "MCA-241",
    "fields": {
      "summary": "Get all CAR MODEL-has-IMAGE Relationships",
      "customfield_10731": "/car-models/<car-model-id>/has-image",
      "customfield_10732": {
        "self": "https://dennis-gerike.atlassian.net/rest/api/3/customFieldOption/10186",
        "value": "GET",
        "id": "10186"
      },
      "customfield_10767": [
        {
          "self": "https://dennis-gerike.atlassian.net/rest/api/3/customFieldOption/10219",
          "value": "200",
          "id": "10219"
        },
        {
          "self": "https://dennis-gerike.atlassian.net/rest/api/3/customFieldOption/10222",
          "value": "404",
          "id": "10222"
        }
      ],
      "created": "2025-06-27T11:09:19.431+0200",
      "customfield_10691": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "As an API consumer"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "I want to get all IMAGEs that are attached to a CAR MODEL"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "So I can get a visual representation of it"
              }
            ]
          }
        ]
      },
      "description": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Request",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "method: "
                      },
                      {
                        "type": "text",
                        "text": "GET",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "URL path: "
                      },
                      {
                        "type": "text",
                        "text": "/car-models/<car-model-id>/has-image",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Response",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Happy path",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "positive HTTP status code (200)"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "a JSON array containing the following relationship data for each item:"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "car_model_id",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": integer"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "image_id",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": integer"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "relationship_id",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": integer"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "relationship_name",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "created_at",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "updated_at",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Unhappy path",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "when there are no matches then an empty array is returned → status code 200"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "404 when car model does not exist"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Acceptance Criteria",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Behavior (Business Logic)",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "the relationships are successfully retrieved when provided with valid data"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "status code "
                              },
                              {
                                "type": "text",
                                "text": "200",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": " when car model was found"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "the relationship retrieval fails when the provided data was not valid"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "404",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": " when "
                              },
                              {
                                "type": "text",
                                "text": "car model",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": " was not found"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "when there exist no respective relationships then an empty list is returned"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "status code "
                              },
                              {
                                "type": "text",
                                "text": "200",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Quality Gates",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Unit+Integration tests (Jest) are extended"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Behavior tests (Cucumber) are added"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "OpenAPI spec is extended & schema is still valid"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Bruno collection is extended"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Performance tests are extended & existing tests are still green"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "NOT in scope for this iteration",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "proper JSON structure according to the JSON:API"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "updated": "2025-08-17T16:44:01.382+0200"
    }
  },
  {
    "expand": "renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations",
    "id": "18994",
    "self": "https://dennis-gerike.atlassian.net/rest/api/3/issue/18994",
    "key": "MCA-240",
    "fields": {
      "summary": "Create BRAND-has-IMAGE Relationship",
      "customfield_10731": null,
      "customfield_10732": null,
      "customfield_10767": null,
      "created": "2025-06-27T11:02:37.250+0200",
      "customfield_10691": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "As an API contributor"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "I want to be able to attach IMAGEs to BRANDs"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "So I can illustrate them"
              }
            ]
          }
        ]
      },
      "description": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Request",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "method: "
                      },
                      {
                        "type": "text",
                        "text": "POST",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "URL path: "
                      },
                      {
                        "type": "text",
                        "text": "/brands/<brand-id>/has-image/<image-id>",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      },
                      {
                        "type": "text",
                        "text": " "
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "empty body"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Response",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Happy path",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "positive HTTP status code (201)"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "a JSON confirming that both entities have been connected:"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "brand_id",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": integer"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "image_id",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": integer"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "relationship_id",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": integer"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "relationship_name",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "created_at",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "updated_at",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Unhappy path",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "negative HTTP status code (404)"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "a plain text response stating the problem"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Acceptance Criteria",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Behavior (Business Logic)",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "the relationship is successfully created when provided with valid data"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "status code "
                              },
                              {
                                "type": "text",
                                "text": "201",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "the relationship is not created when the provided data was not valid"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "brand",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": " and/or "
                              },
                              {
                                "type": "text",
                                "text": "image",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": " not found → status code "
                              },
                              {
                                "type": "text",
                                "text": "404",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "brand",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": " cannot be attached to itself → "
                              },
                              {
                                "type": "text",
                                "text": "422",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": " → already covered by the rule above"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "brand",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": " cannot be attached to other "
                              },
                              {
                                "type": "text",
                                "text": "brand",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": " → "
                              },
                              {
                                "type": "text",
                                "text": "422",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": " → already covered by the rule above"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "the user can trigger the creation of the same relationship over and over again"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "the result is always the same (idempotency)"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "however this is achieved in the code resp. the database, the "
                              },
                              {
                                "type": "text",
                                "text": "More Cars ID",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": " needs to stay the same"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "a "
                      },
                      {
                        "type": "text",
                        "text": "brand",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      },
                      {
                        "type": "text",
                        "text": " can have 0, 1 or multiple "
                      },
                      {
                        "type": "text",
                        "text": "images",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Quality Gates",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Unit+Integration tests (Jest) are extended"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Behavior tests (Cucumber) are added"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "OpenAPI spec is extended & schema is still valid"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Bruno collection is extended"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Performance tests are extended & existing tests are still green"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "NOT in scope for this iteration",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "auth / security"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "proper JSON structure according to the JSON:API"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "returning the relationships in other places"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "deleting the relationship"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "updated": "2025-08-21T13:55:35.609+0200"
    }
  },
  {
    "expand": "renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations",
    "id": "18993",
    "self": "https://dennis-gerike.atlassian.net/rest/api/3/issue/18993",
    "key": "MCA-239",
    "fields": {
      "summary": "Create CAR MODEL-has-IMAGE Relationship",
      "customfield_10731": null,
      "customfield_10732": null,
      "customfield_10767": null,
      "created": "2025-06-27T11:02:23.273+0200",
      "customfield_10691": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "As an API contributor"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "I want to be able to attach IMAGEs to CAR MODELs"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "So I can illustrate them"
              }
            ]
          }
        ]
      },
      "description": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Request",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "method: "
                      },
                      {
                        "type": "text",
                        "text": "POST",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "URL path: "
                      },
                      {
                        "type": "text",
                        "text": "/car-models/<car-model-id>/has-image/<image-id>",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      },
                      {
                        "type": "text",
                        "text": " "
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "empty body"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Response",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Happy path",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "positive HTTP status code (201)"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "a JSON confirming that both entities have been connected:"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "car_model_id",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": integer"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "image_id",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": integer"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "relationship_id",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": integer"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "relationship_name",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "created_at",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "updated_at",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Unhappy path",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "negative HTTP status code (404)"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "a plain text response stating the problem"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Acceptance Criteria",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Behavior (Business Logic)",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "the relationship is successfully created when provided with valid data"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "status code "
                              },
                              {
                                "type": "text",
                                "text": "201",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "the relationship is not created when the provided data was not valid"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "car model",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": " and/or "
                              },
                              {
                                "type": "text",
                                "text": "image",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": " not found → status code "
                              },
                              {
                                "type": "text",
                                "text": "404",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "car model",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": " cannot be attached to itself → "
                              },
                              {
                                "type": "text",
                                "text": "422",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": " → already covered by the rule above"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "car model",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": " cannot be attached to other "
                              },
                              {
                                "type": "text",
                                "text": "car model",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": " → "
                              },
                              {
                                "type": "text",
                                "text": "422",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": " → already covered by the rule above"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "the user can trigger the creation of the same relationship over and over again"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "the result is always the same (idempotency)"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "however this is achieved in the code resp. the database, the "
                              },
                              {
                                "type": "text",
                                "text": "More Cars ID",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": " needs to stay the same"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "a "
                      },
                      {
                        "type": "text",
                        "text": "car model",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      },
                      {
                        "type": "text",
                        "text": " can have 0, 1 or multiple "
                      },
                      {
                        "type": "text",
                        "text": "images",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Quality Gates",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Unit+Integration tests (Jest) are extended"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Behavior tests (Cucumber) are added"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "OpenAPI spec is extended & schema is still valid"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Bruno collection is extended"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Performance tests are extended & existing tests are still green"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "NOT in scope for this iteration",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "auth / security"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "proper JSON structure according to the JSON:API"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "returning the relationships in other places"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "deleting the relationship"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "updated": "2025-08-17T16:43:15.933+0200"
    }
  },
  {
    "expand": "renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations",
    "id": "18992",
    "self": "https://dennis-gerike.atlassian.net/rest/api/3/issue/18992",
    "key": "MCA-238",
    "fields": {
      "summary": "Request single NODE",
      "customfield_10731": null,
      "customfield_10732": null,
      "customfield_10767": null,
      "created": "2025-06-26T10:44:18.194+0200",
      "customfield_10691": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "As a <ROLE>"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "I want to be able to <ACTION>"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "So I can <REASON>"
              }
            ]
          }
        ]
      },
      "description": null,
      "updated": "2025-08-27T13:14:19.703+0200"
    }
  },
  {
    "expand": "renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations",
    "id": "18990",
    "self": "https://dennis-gerike.atlassian.net/rest/api/3/issue/18990",
    "key": "MCA-236",
    "fields": {
      "summary": "Request single RELATIONSHIP",
      "customfield_10731": null,
      "customfield_10732": null,
      "customfield_10767": null,
      "created": "2025-06-26T10:41:43.603+0200",
      "customfield_10691": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "As a <ROLE>"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "I want to be able to <ACTION>"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "So I can <REASON>"
              }
            ]
          }
        ]
      },
      "description": null,
      "updated": "2025-08-27T13:14:25.047+0200"
    }
  },
  {
    "expand": "renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations",
    "id": "18890",
    "self": "https://dennis-gerike.atlassian.net/rest/api/3/issue/18890",
    "key": "MCA-234",
    "fields": {
      "summary": "8-digit IDs",
      "customfield_10731": null,
      "customfield_10732": null,
      "customfield_10767": null,
      "created": "2025-06-17T08:48:55.899+0200",
      "customfield_10691": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "As a user"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "I want the NODE IDs to be short enough "
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "So I can remember them"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "But long enough "
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "So they can be used as meaningful search terms"
              }
            ]
          }
        ]
      },
      "description": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "heading",
            "attrs": {
              "level": 2
            },
            "content": [
              {
                "type": "text",
                "text": "Context"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "In "
              },
              {
                "type": "inlineCard",
                "attrs": {
                  "url": "https://dennis-gerike.atlassian.net/browse/MCA-84"
                }
              },
              {
                "type": "text",
                "text": " and "
              },
              {
                "type": "inlineCard",
                "attrs": {
                  "url": "https://dennis-gerike.atlassian.net/browse/MCA-97"
                }
              },
              {
                "type": "text",
                "text": " all nodes and relationships were extended to contain a custom More Cars ID. The goal of having dedicated IDs is to have full control over them, because the internal Neo4j IDs can neither be changed nor manipulated. But there are two situations were that will be necessary. When migrating the records from the old database to the new one the IDs must stay the same (to not invalidate the existing More Cars links in the internet). Also, the number pattern of the IDs should be adjustable. Right now, the brand “BMW” has the ID “1”. The newest nodes have 6 digits. To have a more uniform pattern (and to make it easier to search for those IDs) they should all have the same length."
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 2
            },
            "content": [
              {
                "type": "text",
                "text": "Mission"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "The IDs for all nodes and all relationships should be changed to be always 8 digits long. Until now those IDs are just a trimmed copy of the internal Neo4j IDs. The Neo4j IDs can still be used as the basis, but they need to be padded to reach the wanted size. The resulting IDs should still be integers (no UUID, no hex numbers, no alphanumeric strings)."
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "There is a slight chance that More Cars 2.0 will be run in parallel with More Cars 1.0 for a while. To avoid potential collisions with the IDs the MC2 numbers should start at 12 million. When the old records are migrated they will be converted to fit in the space between 10 million and 12 million. E.g. when the Neo4j node has the ID “123” then the More Cars ID would be "
              },
              {
                "type": "text",
                "text": "12,000,123",
                "marks": [
                  {
                    "type": "code"
                  }
                ]
              },
              {
                "type": "text",
                "text": " for the new nodes resp. "
              },
              {
                "type": "text",
                "text": "10,000,123",
                "marks": [
                  {
                    "type": "code"
                  }
                ]
              },
              {
                "type": "text",
                "text": " for the old nodes. "
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 2
            },
            "content": [
              {
                "type": "text",
                "text": "Acceptance Criteria",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "all nodes are created with an ID (positive integer number) larger than "
                      },
                      {
                        "type": "text",
                        "text": "12,000,000",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      },
                      {
                        "type": "text",
                        "text": " and smaller than "
                      },
                      {
                        "type": "text",
                        "text": "99,999,999",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "all relationships are created with an ID (positive integer number) bigger than "
                      },
                      {
                        "type": "text",
                        "text": "12,000,000",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      },
                      {
                        "type": "text",
                        "text": " and smaller than "
                      },
                      {
                        "type": "text",
                        "text": "99,999,999",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "the user may not override the ID of a node when creating or updating it"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "the user may not override the ID of a relationship when creating or updating it"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "the system may not override the ID of a node when updating it"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "the system may not override the ID of a relationship when updating it"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 2
            },
            "content": [
              {
                "type": "text",
                "text": "Dev Hints"
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "the code needs to stay flexible enough to give nodes a different ID (e.g. when doing the migration from More Cars 1.0)"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "the code needs to stay flexible enough to give relationships a different ID (not relevant for the migration from More Cars 1.0, but there might be other cases)"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "updated": "2025-07-21T10:45:44.932+0200"
    }
  },
  {
    "expand": "renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations",
    "id": "18766",
    "self": "https://dennis-gerike.atlassian.net/rest/api/3/issue/18766",
    "key": "MCA-209",
    "fields": {
      "summary": "Get all revisions of a specific RELATIONSHIP",
      "customfield_10731": null,
      "customfield_10732": null,
      "customfield_10767": null,
      "created": "2025-06-10T12:52:21.706+0200",
      "customfield_10691": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "As a <ROLE>"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "I want to be able to <ACTION>"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "So I can <REASON>"
              }
            ]
          }
        ]
      },
      "description": null,
      "updated": "2025-06-11T10:20:30.566+0200"
    }
  },
  {
    "expand": "renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations",
    "id": "18765",
    "self": "https://dennis-gerike.atlassian.net/rest/api/3/issue/18765",
    "key": "MCA-208",
    "fields": {
      "summary": "Get all revisions of a specific NODE",
      "customfield_10731": null,
      "customfield_10732": null,
      "customfield_10767": null,
      "created": "2025-06-10T12:52:15.908+0200",
      "customfield_10691": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "As a <ROLE>"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "I want to be able to <ACTION>"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "So I can <REASON>"
              }
            ]
          }
        ]
      },
      "description": null,
      "updated": "2025-06-11T10:20:26.059+0200"
    }
  },
  {
    "expand": "renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations",
    "id": "18764",
    "self": "https://dennis-gerike.atlassian.net/rest/api/3/issue/18764",
    "key": "MCA-207",
    "fields": {
      "summary": "Create RELATIONSHIP revision",
      "customfield_10731": null,
      "customfield_10732": null,
      "customfield_10767": null,
      "created": "2025-06-10T12:51:13.222+0200",
      "customfield_10691": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "As a <ROLE>"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "I want to be able to <ACTION>"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "So I can <REASON>"
              }
            ]
          }
        ]
      },
      "description": null,
      "updated": "2025-06-11T10:20:22.036+0200"
    }
  },
  {
    "expand": "renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations",
    "id": "18763",
    "self": "https://dennis-gerike.atlassian.net/rest/api/3/issue/18763",
    "key": "MCA-206",
    "fields": {
      "summary": "Create NODE revision",
      "customfield_10731": null,
      "customfield_10732": null,
      "customfield_10767": null,
      "created": "2025-06-10T12:51:03.861+0200",
      "customfield_10691": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "As a <ROLE>"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "I want to be able to <ACTION>"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "So I can <REASON>"
              }
            ]
          }
        ]
      },
      "description": null,
      "updated": "2025-06-11T10:20:17.078+0200"
    }
  },
  {
    "expand": "renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations",
    "id": "18692",
    "self": "https://dennis-gerike.atlassian.net/rest/api/3/issue/18692",
    "key": "MCA-182",
    "fields": {
      "summary": "Get CAR MODEL-belongs-to-BRAND Relationship",
      "customfield_10731": "/car-models/<car-model-id>/belongs-to-brand",
      "customfield_10732": {
        "self": "https://dennis-gerike.atlassian.net/rest/api/3/customFieldOption/10186",
        "value": "GET",
        "id": "10186"
      },
      "customfield_10767": [
        {
          "self": "https://dennis-gerike.atlassian.net/rest/api/3/customFieldOption/10219",
          "value": "200",
          "id": "10219"
        },
        {
          "self": "https://dennis-gerike.atlassian.net/rest/api/3/customFieldOption/10222",
          "value": "404",
          "id": "10222"
        }
      ],
      "created": "2025-06-02T09:31:34.498+0200",
      "customfield_10691": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "As an API contributor"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "I want to know to which BRAND a specific CAR MODEL is connected to"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "So I can verify the correctness of the relationship"
              }
            ]
          }
        ]
      },
      "description": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Response",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Happy path",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "positive HTTP status code (200)"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "a JSON object containing the following relationship data:"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "brand_id",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": integer"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "car_model_id",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": integer"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "relationship_id",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": integer"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "relationship_name",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "when there is no brand connected an empty body is returned (200)"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Unhappy path",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "404 when car model does not exist"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Acceptance Criteria",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Behavior (Business Logic)",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "the brand is returned when there is one is attached to the car model"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "200 and an empty body is returned when no brand is attached"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "a 404 is returned when the car model does not exist"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "NOT in scope for this iteration",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "proper JSON structure according to the JSON:API"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "updated": "2025-08-17T16:42:44.049+0200"
    }
  },
  {
    "expand": "renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations",
    "id": "18680",
    "self": "https://dennis-gerike.atlassian.net/rest/api/3/issue/18680",
    "key": "MCA-179",
    "fields": {
      "summary": "Create CAR MODEL-belongs-to-BRAND Relationship",
      "customfield_10731": "/car-models/<car-model-id>/belongs-to-brand/<brand-id>",
      "customfield_10732": {
        "self": "https://dennis-gerike.atlassian.net/rest/api/3/customFieldOption/10187",
        "value": "POST",
        "id": "10187"
      },
      "customfield_10767": [
        {
          "self": "https://dennis-gerike.atlassian.net/rest/api/3/customFieldOption/10220",
          "value": "201",
          "id": "10220"
        },
        {
          "self": "https://dennis-gerike.atlassian.net/rest/api/3/customFieldOption/10222",
          "value": "404",
          "id": "10222"
        }
      ],
      "created": "2025-05-24T17:42:52.427+0200",
      "customfield_10691": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "As an API contributor"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "I want to be able to connect a BRAND to CAR MODELs"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "So I can create car families"
              }
            ]
          }
        ]
      },
      "description": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Response",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Happy path",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "positive HTTP status code (201)"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "a simple JSON confirming that both entities have been connected:"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "car_model_id",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": integer"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "brand_id",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": integer"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "relationship_id",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": integer"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "relationship_name",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Unhappy path",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "negative HTTP status code (404)"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "a plain text response stating the problem"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Acceptance Criteria",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Behavior (Business Logic)",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "the relationship is not created in error case"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "an error message when the provided data was not valid"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "404 when "
                              },
                              {
                                "type": "text",
                                "text": "brand",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": " or "
                              },
                              {
                                "type": "text",
                                "text": "car model",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": " were not found"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "the relationship is successfully created when provided with valid data"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "the user can trigger the creation of the same relationship over and over again"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "the result is always the same (idempotency)"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "the relation may be recreated in the database, but the "
                              },
                              {
                                "type": "text",
                                "text": "More Cars ID",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": " needs to stay the same"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "each car model can only belong to one brand"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "when a new brand is assigned the original relationship will be removed"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Quality Gates",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Unit+Integration tests (Jest) are extended (100% coverage)"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Behavior tests (Cucumber) are added (100% coverage)"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "OpenAPI spec is extended"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "schema is still valid"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Bruno collection is extended"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Performance tests are extended"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "existing tests are still green"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "NOT in scope for this iteration",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "auth / security"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "proper JSON structure according to the JSON:API"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "returning the relationships in other places"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "deleting the relationship"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "updated": "2025-08-17T16:41:22.679+0200"
    }
  },
  {
    "expand": "renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations",
    "id": "18656",
    "self": "https://dennis-gerike.atlassian.net/rest/api/3/issue/18656",
    "key": "MCA-155",
    "fields": {
      "summary": "Get all Relationships: IMAGE belongs to NODE TYPE",
      "customfield_10731": "/images/<image-id>/belongs-to-node-type",
      "customfield_10732": {
        "self": "https://dennis-gerike.atlassian.net/rest/api/3/customFieldOption/10186",
        "value": "GET",
        "id": "10186"
      },
      "customfield_10767": [
        {
          "self": "https://dennis-gerike.atlassian.net/rest/api/3/customFieldOption/10219",
          "value": "200",
          "id": "10219"
        },
        {
          "self": "https://dennis-gerike.atlassian.net/rest/api/3/customFieldOption/10222",
          "value": "404",
          "id": "10222"
        }
      ],
      "created": "2025-05-23T16:15:58.070+0200",
      "customfield_10691": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "As an API consumer"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "I want to know all nodes an IMAGE is connected to"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "But the returned list should be grouped by NODE type"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "So I get a semantic perspective on the data"
              }
            ]
          }
        ]
      },
      "description": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "the relationships are successfully retrieved when provided with valid data → status code "
                      },
                      {
                        "type": "text",
                        "text": "200",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "a JSON object, with an array for each node type, each containing the following relationship data:"
                              }
                            ]
                          },
                          {
                            "type": "bulletList",
                            "content": [
                              {
                                "type": "listItem",
                                "content": [
                                  {
                                    "type": "paragraph",
                                    "content": [
                                      {
                                        "type": "text",
                                        "text": "image_id",
                                        "marks": [
                                          {
                                            "type": "code"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "text",
                                        "text": ": integer"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "listItem",
                                "content": [
                                  {
                                    "type": "paragraph",
                                    "content": [
                                      {
                                        "type": "text",
                                        "text": "partner_node_id",
                                        "marks": [
                                          {
                                            "type": "code"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "text",
                                        "text": ": integer"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "listItem",
                                "content": [
                                  {
                                    "type": "paragraph",
                                    "content": [
                                      {
                                        "type": "text",
                                        "text": "partner_node_type",
                                        "marks": [
                                          {
                                            "type": "code"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "text",
                                        "text": ": string"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "listItem",
                                "content": [
                                  {
                                    "type": "paragraph",
                                    "content": [
                                      {
                                        "type": "text",
                                        "text": "relationship_id",
                                        "marks": [
                                          {
                                            "type": "code"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "text",
                                        "text": ": integer"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "listItem",
                                "content": [
                                  {
                                    "type": "paragraph",
                                    "content": [
                                      {
                                        "type": "text",
                                        "text": "relationship_name",
                                        "marks": [
                                          {
                                            "type": "code"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "text",
                                        "text": ": string"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "the relationship retrieval fails when the provided data was not valid"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "status code "
                              },
                              {
                                "type": "text",
                                "text": "404",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": " when the "
                              },
                              {
                                "type": "text",
                                "text": "image",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": " was not found"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "when there exist no relationships then the respective array in the object is empty"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 3
            },
            "content": [
              {
                "type": "text",
                "text": "NOT in scope for this iteration",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "proper JSON structure according to the JSON:API"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "updated": "2025-08-21T14:11:57.406+0200"
    }
  },
  {
    "expand": "renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations",
    "id": "18655",
    "self": "https://dennis-gerike.atlassian.net/rest/api/3/issue/18655",
    "key": "MCA-154",
    "fields": {
      "summary": "Get all IMAGE-belongs-to-NODE Relationships",
      "customfield_10731": "/images/<image-id>/belongs-to-node",
      "customfield_10732": {
        "self": "https://dennis-gerike.atlassian.net/rest/api/3/customFieldOption/10186",
        "value": "GET",
        "id": "10186"
      },
      "customfield_10767": [
        {
          "self": "https://dennis-gerike.atlassian.net/rest/api/3/customFieldOption/10219",
          "value": "200",
          "id": "10219"
        },
        {
          "self": "https://dennis-gerike.atlassian.net/rest/api/3/customFieldOption/10222",
          "value": "404",
          "id": "10222"
        }
      ],
      "created": "2025-05-23T14:32:14.299+0200",
      "customfield_10691": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "As an API contributor"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "I want to find out whether an IMAGE is already connected to other nodes"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "So I can reduce the number of orphans in the database"
              }
            ]
          }
        ]
      },
      "description": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Response",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Happy path",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "positive HTTP status code (200)"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "a JSON array containing the following relationship data for each item:"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "image_id",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": integer"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "partner_node_id",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": integer"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "relationship_id",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": integer"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "relationship_name",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Unhappy path",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "when there are no matches then an empty array is returned → status code 200"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "404 when image does not exist"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Acceptance Criteria",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Behavior (Business Logic)",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "the relationships are successfully retrieved when provided with valid data"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "status code "
                              },
                              {
                                "type": "text",
                                "text": "200",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "the relationship retrieval fails when the provided data was not valid"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "404",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": " when "
                              },
                              {
                                "type": "text",
                                "text": "image",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": " was not found"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "when there exist no respective relationships then an empty list is returned"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "status code "
                              },
                              {
                                "type": "text",
                                "text": "200",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "NOT in scope for this iteration",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "proper JSON structure according to the JSON:API"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "updated": "2025-08-21T14:11:08.095+0200"
    }
  },
  {
    "expand": "renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations",
    "id": "18587",
    "self": "https://dennis-gerike.atlassian.net/rest/api/3/issue/18587",
    "key": "MCA-97",
    "fields": {
      "summary": "Providing IDs for all RELATIONSHIPs",
      "customfield_10731": null,
      "customfield_10732": null,
      "customfield_10767": null,
      "created": "2025-05-20T10:34:40.719+0200",
      "customfield_10691": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "As an API consumer"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "I need all RELATIONSHIPs to have an IDENTIFIER"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "So I can find the RELATIONSHIPs again to reference them in different contexts"
              }
            ]
          }
        ]
      },
      "description": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Background Information"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Each relationship needs to have a (unique) identifier. Without them it is (partially) impossible to identify specific relationships."
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Neo4J automatically adds an "
              },
              {
                "type": "text",
                "text": "ID",
                "marks": [
                  {
                    "type": "code"
                  }
                ]
              },
              {
                "type": "text",
                "text": " and an "
              },
              {
                "type": "text",
                "text": "element ID",
                "marks": [
                  {
                    "type": "code"
                  }
                ]
              },
              {
                "type": "text",
                "text": " when a new relationship is created. But using them directly is problematic. "
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Issue:",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              },
              {
                "type": "text",
                "text": " Whenever a relationship is deleted, its ID is released and Neo4J can (and will) use it again for new relationships. This can cause confusing when two or more relationships have/had the same ID."
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "The Mission"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "In order to solve those issues the only option is to manage the IDs on application side. Creating a relationship between two nodes needs to trigger a process that generates a unique ID and attaches it to that relationship. Where exactly this process happens doesn’t matter so much. Important is that a returned relationship always contains an ID. Meaning, it "
              },
              {
                "type": "text",
                "text": "cannot",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              },
              {
                "type": "text",
                "text": " be an asynchronous solution where the ID is added afterwards via a cron job. Using a synchronous solution here will make the response times a bit slower (a few milliseconds), but avoids complex business logic."
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Acceptance Criteria",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "whenever a relationship is created the response has to contain an ID"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "returned as field "
                              },
                              {
                                "type": "text",
                                "text": "relationship_id",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": " from type "
                              },
                              {
                                "type": "text",
                                "text": "number",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "whenever a relationship is requested the response has to contain an ID"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "get by ID"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "get all Brand has Car Model relationships, etc."
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "the generated ID is returned as a number (integer) within the 32-bit space"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "this allows for up to 4 billion relationships→ this will be more than enough for the next 10 or 20 years"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "how this number is internally stored doesn’t matter, as long as it is returned as described above"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "the ID needs to be unique → no other relationship is allowed to have the same ID"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "updated": "2025-06-17T08:54:43.320+0200"
    }
  },
  {
    "expand": "renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations",
    "id": "18586",
    "self": "https://dennis-gerike.atlassian.net/rest/api/3/issue/18586",
    "key": "MCA-96",
    "fields": {
      "summary": "Delete IMAGE-belongs-to-NODE Relationship",
      "customfield_10731": null,
      "customfield_10732": null,
      "customfield_10767": null,
      "created": "2025-05-20T08:59:15.546+0200",
      "customfield_10691": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "As a <ROLE>"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "I want to be able to <ACTION>"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "So I can <REASON>"
              }
            ]
          }
        ]
      },
      "description": null,
      "updated": "2025-08-21T14:12:21.957+0200"
    }
  },
  {
    "expand": "renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations",
    "id": "18584",
    "self": "https://dennis-gerike.atlassian.net/rest/api/3/issue/18584",
    "key": "MCA-94",
    "fields": {
      "summary": "Get IMAGE-belongs-to-NODE Relationship by ID",
      "customfield_10731": "/images/<image-id>/belongs-to-node/<partner-node-id>",
      "customfield_10732": {
        "self": "https://dennis-gerike.atlassian.net/rest/api/3/customFieldOption/10186",
        "value": "GET",
        "id": "10186"
      },
      "customfield_10767": [
        {
          "self": "https://dennis-gerike.atlassian.net/rest/api/3/customFieldOption/10219",
          "value": "200",
          "id": "10219"
        },
        {
          "self": "https://dennis-gerike.atlassian.net/rest/api/3/customFieldOption/10222",
          "value": "404",
          "id": "10222"
        },
        {
          "self": "https://dennis-gerike.atlassian.net/rest/api/3/customFieldOption/10223",
          "value": "422",
          "id": "10223"
        }
      ],
      "created": "2025-05-20T08:58:44.100+0200",
      "customfield_10691": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "As an API contributor"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "When I find an IMAGE that would be a good candidate to illustrate a specific node"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "I want to know if both nodes are already connected to each other"
              }
            ]
          }
        ]
      },
      "description": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Response",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Happy path",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "positive HTTP status code (200)"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "a JSON containing the relationship data:"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "image_id",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": integer"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "partner_node_id",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": integer"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "partner_node_type",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "relationship_id",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": integer"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "relationship_name",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Unhappy path",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "negative HTTP status code (404)"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "a plain text response stating the problem"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Acceptance Criteria",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Behavior (Business Logic)",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "the relationship is successfully retrieved when provided with valid data"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "status code "
                              },
                              {
                                "type": "text",
                                "text": "200",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "the relationship retrieval fails when the provided data was not valid"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "404",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": " when "
                              },
                              {
                                "type": "text",
                                "text": "image",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": " and/or "
                              },
                              {
                                "type": "text",
                                "text": "partner_node",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": " were not found"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "404",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": " when the expected relationship doesn't exists between both nodes"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "422",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": " when "
                              },
                              {
                                "type": "text",
                                "text": "image",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": " and "
                              },
                              {
                                "type": "text",
                                "text": "partner_node",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": " are the same"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Quality Gates",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Unit+Integration tests (Jest) are extended (100% coverage)"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Behavior tests (Cucumber) are added (100% coverage)"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "OpenAPI spec is extended"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "schema is still valid"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Bruno collection is extended"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Performance tests are extended"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "existing tests are still green"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "NOT in scope for this iteration",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "proper JSON structure according to the JSON:API"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "updated": "2025-08-21T14:10:58.513+0200"
    }
  },
  {
    "expand": "renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations",
    "id": "18583",
    "self": "https://dennis-gerike.atlassian.net/rest/api/3/issue/18583",
    "key": "MCA-93",
    "fields": {
      "summary": "Create IMAGE-is-prime-image-of-NODE Relationship",
      "customfield_10731": null,
      "customfield_10732": null,
      "customfield_10767": null,
      "created": "2025-05-20T08:57:30.241+0200",
      "customfield_10691": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "As a <ROLE>"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "I want to be able to <ACTION>"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "So I can <REASON>"
              }
            ]
          }
        ]
      },
      "description": null,
      "updated": "2025-08-21T14:14:53.169+0200"
    }
  },
  {
    "expand": "renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations",
    "id": "18582",
    "self": "https://dennis-gerike.atlassian.net/rest/api/3/issue/18582",
    "key": "MCA-92",
    "fields": {
      "summary": "Hard Delete CAR MODEL Node",
      "customfield_10731": "/car-models/<car-model-id>",
      "customfield_10732": {
        "self": "https://dennis-gerike.atlassian.net/rest/api/3/customFieldOption/10189",
        "value": "DELETE",
        "id": "10189"
      },
      "customfield_10767": [
        {
          "self": "https://dennis-gerike.atlassian.net/rest/api/3/customFieldOption/10285",
          "value": "204",
          "id": "10285"
        },
        {
          "self": "https://dennis-gerike.atlassian.net/rest/api/3/customFieldOption/10222",
          "value": "404",
          "id": "10222"
        }
      ],
      "created": "2025-05-19T18:09:51.674+0200",
      "customfield_10691": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "As an API contributor"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "I want to be able to delete a CAR MODEL"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "So I can clean up bad data, test data or redundant data"
              }
            ]
          }
        ]
      },
      "description": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "the node is deleted when it actually exists → status code "
                      },
                      {
                        "type": "text",
                        "text": "204",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "when the node does not exist nothing happens → status code "
                      },
                      {
                        "type": "text",
                        "text": "404",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "all attached relationships are deleted when the node is deleted"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "updated": "2025-08-21T15:18:11.283+0200"
    }
  },
  {
    "expand": "renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations",
    "id": "18581",
    "self": "https://dennis-gerike.atlassian.net/rest/api/3/issue/18581",
    "key": "MCA-91",
    "fields": {
      "summary": "Update CAR MODEL Node",
      "customfield_10731": null,
      "customfield_10732": null,
      "customfield_10767": null,
      "created": "2025-05-19T18:09:44.864+0200",
      "customfield_10691": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "As a <ROLE>"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "I want to be able to <ACTION>"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "So I can <REASON>"
              }
            ]
          }
        ]
      },
      "description": null,
      "updated": "2025-08-17T13:08:08.430+0200"
    }
  },
  {
    "expand": "renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations",
    "id": "18580",
    "self": "https://dennis-gerike.atlassian.net/rest/api/3/issue/18580",
    "key": "MCA-90",
    "fields": {
      "summary": "Hard Delete BRAND Node",
      "customfield_10731": "/brands/<brand-id>",
      "customfield_10732": {
        "self": "https://dennis-gerike.atlassian.net/rest/api/3/customFieldOption/10189",
        "value": "DELETE",
        "id": "10189"
      },
      "customfield_10767": [
        {
          "self": "https://dennis-gerike.atlassian.net/rest/api/3/customFieldOption/10285",
          "value": "204",
          "id": "10285"
        },
        {
          "self": "https://dennis-gerike.atlassian.net/rest/api/3/customFieldOption/10222",
          "value": "404",
          "id": "10222"
        }
      ],
      "created": "2025-05-19T18:09:21.362+0200",
      "customfield_10691": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "As an API contributor"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "I want to be able to delete a BRAND"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "So I can clean up bad data, test data or redundant data"
              }
            ]
          }
        ]
      },
      "description": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "the node is deleted when it actually exists → status code "
                      },
                      {
                        "type": "text",
                        "text": "204",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "when the node does not exist nothing happens → status code "
                      },
                      {
                        "type": "text",
                        "text": "404",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "all attached relationships are deleted when the node is deleted"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "updated": "2025-08-21T15:18:08.959+0200"
    }
  },
  {
    "expand": "renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations",
    "id": "18579",
    "self": "https://dennis-gerike.atlassian.net/rest/api/3/issue/18579",
    "key": "MCA-89",
    "fields": {
      "summary": "Update BRAND Node",
      "customfield_10731": "/brands/<id>",
      "customfield_10732": {
        "self": "https://dennis-gerike.atlassian.net/rest/api/3/customFieldOption/10188",
        "value": "PATCH",
        "id": "10188"
      },
      "customfield_10767": null,
      "created": "2025-05-19T18:09:16.209+0200",
      "customfield_10691": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "As a <ROLE>"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "I want to be able to <ACTION>"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "So I can <REASON>"
              }
            ]
          }
        ]
      },
      "description": null,
      "updated": "2025-08-21T13:50:24.650+0200"
    }
  },
  {
    "expand": "renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations",
    "id": "18578",
    "self": "https://dennis-gerike.atlassian.net/rest/api/3/issue/18578",
    "key": "MCA-88",
    "fields": {
      "summary": "Import WIKIMEDIA images",
      "customfield_10731": null,
      "customfield_10732": null,
      "customfield_10767": null,
      "created": "2025-05-19T15:14:04.340+0200",
      "customfield_10691": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "As an API contributor"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "I want to import WIKIMEDIA images via their ID"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "So I don't have to fill out all fields manually"
              }
            ]
          }
        ]
      },
      "description": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Request",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "method: "
                      },
                      {
                        "type": "text",
                        "text": "POST",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "URL path: "
                      },
                      {
                        "type": "text",
                        "text": "/images",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      },
                      {
                        "type": "text",
                        "text": " "
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "properties:"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "image_provider",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string “wikimedia“, mandatory"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "external_id",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string, mandatory"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Response",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Happy path",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "positive HTTP status code (201)"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "a JSON with the meta information, the user data and the imported data:"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "id",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": integer"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "external_id",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "image_provider",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string “wikimedia“"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "name",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "description",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string/null"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "creator",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "license",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "tags",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string/null"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "source",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "image_url_original",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "image_url_xxl",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string/null"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "image_url_xl",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string/null"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "image_url_l",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string/null"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "image_url_m",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string/null"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "image_url_s",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string/null"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "image_url_xs",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string/null"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "created_at",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "updated_at",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Unhappy path",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "negative HTTP status code (400, 422)"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "a plain text response stating the problem"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Acceptance Criteria",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Behavior (Business Logic)",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "the node is successfully created when provided with valid data "
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "when the request is malformed then code 400 is returned (incl. error message in plain text) → already covered by "
                      },
                      {
                        "type": "inlineCard",
                        "attrs": {
                          "url": "https://dennis-gerike.atlassian.net/browse/MCA-75"
                        }
                      }
                    ]
                  },
                  {
                    "type": "mediaSingle",
                    "attrs": {
                      "layout": "center"
                    },
                    "content": [
                      {
                        "type": "media",
                        "attrs": {
                          "type": "file",
                          "id": "8951c3fe-d48f-4c56-993e-a297a5c87337",
                          "collection": "",
                          "height": 16,
                          "width": 16
                        }
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "when mandatory fields are missing"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "when wrong data types were submitted"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "when a wikimedia image with the given ID could not be found → 422"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "unknown properties are ignored (no error, no warning) → already covered by "
                      },
                      {
                        "type": "inlineCard",
                        "attrs": {
                          "url": "https://dennis-gerike.atlassian.net/browse/MCA-75"
                        }
                      }
                    ]
                  },
                  {
                    "type": "mediaSingle",
                    "attrs": {
                      "layout": "center"
                    },
                    "content": [
                      {
                        "type": "media",
                        "attrs": {
                          "type": "file",
                          "id": "2874b4fb-2704-4bac-9e42-78c38b59ff47",
                          "collection": "",
                          "height": 16,
                          "width": 16
                        }
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "the nodes are filled with the data returned from the wikimedia API"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "empty values are returned as "
                              },
                              {
                                "type": "text",
                                "text": "null",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Quality Gates",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Unit+Integration tests (Jest) are extended (100% coverage)"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Behavior tests (Cucumber) are added (100% coverage)"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "OpenAPI spec is extended"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "schema is still valid"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Bruno collection is extended"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Performance tests are extended"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "tests are still green"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "NOT in scope for this iteration",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "full validation"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "bulk create"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "versioning information"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "auth / security"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "proper JSON structure according to the JSON:API"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "updated": "2025-08-22T15:50:04.423+0200"
    }
  },
  {
    "expand": "renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations",
    "id": "18577",
    "self": "https://dennis-gerike.atlassian.net/rest/api/3/issue/18577",
    "key": "MCA-87",
    "fields": {
      "summary": "Import FLICKR images",
      "customfield_10731": null,
      "customfield_10732": null,
      "customfield_10767": null,
      "created": "2025-05-19T15:13:34.421+0200",
      "customfield_10691": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "As an API contributor"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "I want to import FLICKR images via their ID"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "So I don't have to fill out all fields manually"
              }
            ]
          }
        ]
      },
      "description": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Request",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "method: "
                      },
                      {
                        "type": "text",
                        "text": "POST",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "URL path: "
                      },
                      {
                        "type": "text",
                        "text": "/images",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      },
                      {
                        "type": "text",
                        "text": " "
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "properties:"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "image_provider",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string “flickr“, mandatory"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "external_id",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string, mandatory"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Response",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Happy path",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "positive HTTP status code (201)"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "a JSON with the meta information, the user data and the imported data:"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "id",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": integer"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "external_id",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "image_provider",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string “flickr“"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "name",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "description",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string/null"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "creator",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "license",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "tags",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string/null"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "source",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "image_url_original",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "image_url_xxl",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string/null"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "image_url_xl",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string/null"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "image_url_l",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string/null"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "image_url_m",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string/null"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "image_url_s",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string/null"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "image_url_xs",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string/null"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "created_at",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "updated_at",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Unhappy path",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "negative HTTP status code (400, 422)"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "a plain text response stating the problem"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Acceptance Criteria",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Behavior (Business Logic)",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "the node is successfully created when provided with valid data "
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "when the request is malformed then code 400 is returned (incl. error message in plain text) → already covered by "
                      },
                      {
                        "type": "inlineCard",
                        "attrs": {
                          "url": "https://dennis-gerike.atlassian.net/browse/MCA-75"
                        }
                      }
                    ]
                  },
                  {
                    "type": "mediaSingle",
                    "attrs": {
                      "layout": "center"
                    },
                    "content": [
                      {
                        "type": "media",
                        "attrs": {
                          "type": "file",
                          "id": "a4b21c53-1cda-4356-a1d3-09e0e0786dc7",
                          "collection": "",
                          "height": 16,
                          "width": 16
                        }
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "when mandatory fields are missing"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "when wrong data types were submitted"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "when a flickr image with the given ID could not be found → 422"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "unknown properties are ignored (no error, no warning) → already covered by "
                      },
                      {
                        "type": "inlineCard",
                        "attrs": {
                          "url": "https://dennis-gerike.atlassian.net/browse/MCA-75"
                        }
                      },
                      {
                        "type": "text",
                        "text": " "
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "the nodes are filled with the data returned from the flickr API"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "empty values are returned as "
                              },
                              {
                                "type": "text",
                                "text": "null",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Quality Gates",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Unit+Integration tests (Jest) are extended (100% coverage)"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Behavior tests (Cucumber) are added (100% coverage)"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "OpenAPI spec is extended"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "schema is still valid"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Bruno collection is extended"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Performance tests are extended"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "tests are still green"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "NOT in scope for this iteration",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "full validation"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "bulk create"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "versioning information"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "auth / security"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "proper JSON structure according to the JSON:API"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "updated": "2025-08-22T15:49:58.413+0200"
    }
  },
  {
    "expand": "renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations",
    "id": "18574",
    "self": "https://dennis-gerike.atlassian.net/rest/api/3/issue/18574",
    "key": "MCA-84",
    "fields": {
      "summary": "Providing IDs for all NODEs",
      "customfield_10731": null,
      "customfield_10732": null,
      "customfield_10767": null,
      "created": "2025-05-18T10:51:46.407+0200",
      "customfield_10691": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "As an API consumer"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "I need all NODEs to have an IDENTIFIER"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "So I can find the NODEs again to reference them in different contexts"
              }
            ]
          }
        ]
      },
      "description": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Background Information"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Each node needs to have a (unique) identifier. Without them it is impossible to find nodes again or to connect them with each other. "
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Neo4J automatically adds an "
              },
              {
                "type": "text",
                "text": "ID",
                "marks": [
                  {
                    "type": "code"
                  }
                ]
              },
              {
                "type": "text",
                "text": " and an "
              },
              {
                "type": "text",
                "text": "element ID",
                "marks": [
                  {
                    "type": "code"
                  }
                ]
              },
              {
                "type": "text",
                "text": " when a new node is created. But using them directly is problematic. "
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Issue #1:",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              },
              {
                "type": "text",
                "text": " Whenever a node is deleted, its ID is released and Neo4J can (and will) use it again for new nodes. This can cause confusing when two or more nodes have/had the same ID."
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Issue #2:",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              },
              {
                "type": "text",
                "text": " When migrating the database from More Cars 1.0 to 2.0 the old IDs need to be preserved. This is not possible when using Neo4J’s internal IDs. They are read-only. Every node would get a new ID. Every existing link to More Cars would be invalid then."
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "The Mission"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "In order to solve those issues the only option is to manage the IDs on application side. Creating a node needs to trigger a process that generates a unique ID and attaches it to the node. Where exactly this process happens doesn’t matter so much. Important is that a returned node always contains an ID. Meaning, it "
              },
              {
                "type": "text",
                "text": "cannot",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              },
              {
                "type": "text",
                "text": " be an asynchronous solution where the ID is added afterwards via a cron job. Using a synchronous solution here will make the response times a bit slower (a few milliseconds), but avoids complex business logic."
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Acceptance Criteria",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "whenever a node is created the response has to contain an ID"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "returned as field "
                              },
                              {
                                "type": "text",
                                "text": "id",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": " from type "
                              },
                              {
                                "type": "text",
                                "text": "number",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "whenever a node is requested the response has to contain an ID"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "get by ID"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "get all Brands, get all Car Models, get all Images, etc."
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "the generated ID is returned as a number (integer) within the 32-bit space"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "this allows for up to 4 billion nodes → this will be more than enough for the next 10 or 20 years"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "how this number is internally stored doesn’t matter, as long as it is returned as described above"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "the ID needs to be unique → no other node is allowed to have the same ID"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "updated": "2025-06-10T13:02:59.867+0200"
    }
  },
  {
    "expand": "renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations",
    "id": "18573",
    "self": "https://dennis-gerike.atlassian.net/rest/api/3/issue/18573",
    "key": "MCA-83",
    "fields": {
      "summary": "NODE has VIDEO",
      "customfield_10731": null,
      "customfield_10732": null,
      "customfield_10767": null,
      "created": "2025-05-18T10:50:50.647+0200",
      "customfield_10691": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "As a <ROLE>"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "I want to be able to <ACTION>"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "So I can <REASON>"
              }
            ]
          }
        ]
      },
      "description": null,
      "updated": "2025-06-11T10:19:43.312+0200"
    }
  },
  {
    "expand": "renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations",
    "id": "18572",
    "self": "https://dennis-gerike.atlassian.net/rest/api/3/issue/18572",
    "key": "MCA-82",
    "fields": {
      "summary": "Create IMAGE-belongs-to-NODE Relationship",
      "customfield_10731": null,
      "customfield_10732": null,
      "customfield_10767": null,
      "created": "2025-05-18T10:49:46.774+0200",
      "customfield_10691": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "As an API contributor"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "I want to attach IMAGEs to CAR MODELs (and other types of nodes)"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "So I can create a visual representation of those nodes"
              }
            ]
          }
        ]
      },
      "description": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Request",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "method: "
                      },
                      {
                        "type": "text",
                        "text": "POST",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "URL path: "
                      },
                      {
                        "type": "text",
                        "text": "/images/<image-id>/belongs-to-node/<partner-node-id>",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      },
                      {
                        "type": "text",
                        "text": " "
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "empty body"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Response",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Happy path",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "positive HTTP status code (201)"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "a JSON confirming that both entities have been connected:"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "image_id",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": integer"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "partner_node_id",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": integer"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "relationship_id",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": integer"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "relationship_name",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Unhappy path",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "negative HTTP status code (404, 422)"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "a plain text response stating the problem"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Acceptance Criteria",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Behavior (Business Logic)",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "the relationship is successfully created when provided with valid data"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "status code "
                              },
                              {
                                "type": "text",
                                "text": "201",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "the relationship is not created when the provided data was not valid"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "image",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": " and/or "
                              },
                              {
                                "type": "text",
                                "text": "partner_node",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": " not found → status code "
                              },
                              {
                                "type": "text",
                                "text": "404",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "images",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": " cannot be attached to themselves → "
                              },
                              {
                                "type": "text",
                                "text": "422",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "images",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": " cannot be attached to other "
                              },
                              {
                                "type": "text",
                                "text": "images",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": " → "
                              },
                              {
                                "type": "text",
                                "text": "422",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "the user can trigger the creation of the same relationship over and over again"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "the result is always the same (idempotency)"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "however this is achieved in the code resp. the database, the "
                              },
                              {
                                "type": "text",
                                "text": "More Cars ID",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": " needs to stay the same"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "each "
                      },
                      {
                        "type": "text",
                        "text": "image",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      },
                      {
                        "type": "text",
                        "text": " can be attached to multiple "
                      },
                      {
                        "type": "text",
                        "text": "nodes",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      },
                      {
                        "type": "text",
                        "text": " of the "
                      },
                      {
                        "type": "text",
                        "text": "same ",
                        "marks": [
                          {
                            "type": "em"
                          }
                        ]
                      },
                      {
                        "type": "text",
                        "text": "type "
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "e.g. two brands can have the same image"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "each "
                      },
                      {
                        "type": "text",
                        "text": "image",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      },
                      {
                        "type": "text",
                        "text": " can be attached to multiple "
                      },
                      {
                        "type": "text",
                        "text": "nodes",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      },
                      {
                        "type": "text",
                        "text": " of "
                      },
                      {
                        "type": "text",
                        "text": "different ",
                        "marks": [
                          {
                            "type": "em"
                          }
                        ]
                      },
                      {
                        "type": "text",
                        "text": "types "
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "e.g. a brand and a car model can have the same image"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Quality Gates",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Unit+Integration tests (Jest) are extended (100% coverage)"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Behavior tests (Cucumber) are added (100% coverage)"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "OpenAPI spec is extended"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "schema is still valid"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Bruno collection is extended"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Performance tests are extended"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "existing tests are still green"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "NOT in scope for this iteration",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "auth / security"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "proper JSON structure according to the JSON:API"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "returning the relationships in other places"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "deleting the relationship"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "updated": "2025-08-21T14:10:15.700+0200"
    }
  },
  {
    "expand": "renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations",
    "id": "18569",
    "self": "https://dennis-gerike.atlassian.net/rest/api/3/issue/18569",
    "key": "MCA-79",
    "fields": {
      "summary": "Hard Delete IMAGE Node",
      "customfield_10731": "/images/<image-id>",
      "customfield_10732": {
        "self": "https://dennis-gerike.atlassian.net/rest/api/3/customFieldOption/10189",
        "value": "DELETE",
        "id": "10189"
      },
      "customfield_10767": [
        {
          "self": "https://dennis-gerike.atlassian.net/rest/api/3/customFieldOption/10285",
          "value": "204",
          "id": "10285"
        },
        {
          "self": "https://dennis-gerike.atlassian.net/rest/api/3/customFieldOption/10222",
          "value": "404",
          "id": "10222"
        }
      ],
      "created": "2025-05-18T10:41:51.673+0200",
      "customfield_10691": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "As an API contributor"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "I want to be able to delete an IMAGE"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "So I can clean up bad data, test data or redundant data"
              }
            ]
          }
        ]
      },
      "description": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "the node is deleted when it actually exists → status code "
                      },
                      {
                        "type": "text",
                        "text": "204",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "when the node does not exist nothing happens → status code "
                      },
                      {
                        "type": "text",
                        "text": "404",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "all attached relationships are deleted when the node is deleted"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "updated": "2025-08-21T15:18:13.603+0200"
    }
  },
  {
    "expand": "renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations",
    "id": "18568",
    "self": "https://dennis-gerike.atlassian.net/rest/api/3/issue/18568",
    "key": "MCA-78",
    "fields": {
      "summary": "Update IMAGE Node",
      "customfield_10731": null,
      "customfield_10732": null,
      "customfield_10767": null,
      "created": "2025-05-18T10:41:42.773+0200",
      "customfield_10691": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "As a <ROLE>"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "I want to be able to <ACTION>"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "So I can <REASON>"
              }
            ]
          }
        ]
      },
      "description": null,
      "updated": "2025-08-21T14:08:08.853+0200"
    }
  },
  {
    "expand": "renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations",
    "id": "18567",
    "self": "https://dennis-gerike.atlassian.net/rest/api/3/issue/18567",
    "key": "MCA-77",
    "fields": {
      "summary": "Get all IMAGE Nodes",
      "customfield_10731": null,
      "customfield_10732": null,
      "customfield_10767": null,
      "created": "2025-05-18T10:41:23.704+0200",
      "customfield_10691": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "As an API consumer"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "I want to be able to request all IMAGEs"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "So I can process them without having to load each of them individually"
              }
            ]
          }
        ]
      },
      "description": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Request",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "method: "
                      },
                      {
                        "type": "text",
                        "text": "GET",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "URL path: "
                      },
                      {
                        "type": "text",
                        "text": "/images",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Response",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Happy path",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "positive HTTP status code (200)"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "a JSON array of all image nodes, each having the following properties:"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "id",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": integer",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "external_id",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "image_provider",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "name",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "description",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string/null",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "creator",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "license",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "tags",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string/null",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "source",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "image_url_original",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "image_url_xxl",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string/null",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "image_url_xl",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string/null",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "image_url_l",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string/null",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "image_url_m",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string/null",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "image_url_s",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string/null",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "image_url_xs",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string/null",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "created_at",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "updated_at",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Unhappy path",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "n.a. → when there are no images an empty array is returned → same status code (200)"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Acceptance Criteria",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Behavior (Business logic)",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "all existing nodes of that node type are returned as a list → 200"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "an empty list is returned when there exist no nodes of that node type in the database → 200"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Quality Gates",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Unit+Integration tests (Jest) are extended (100% coverage combined)"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Behavior tests (Cucumber) are added (100% coverage)"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "OpenAPI spec is extended"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "schema is still valid"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Bruno collection is extended"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Performance tests are extended"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "tests are still green"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "NOT in scope for this iteration",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "relationships with other nodes (e.g. car models or company)"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "proper JSON structure according to the JSON:API"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "sorting, filtering, pagination"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "updated": "2025-08-21T14:07:49.491+0200"
    }
  },
  {
    "expand": "renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations",
    "id": "18566",
    "self": "https://dennis-gerike.atlassian.net/rest/api/3/issue/18566",
    "key": "MCA-76",
    "fields": {
      "summary": "Get IMAGE Node by ID",
      "customfield_10731": null,
      "customfield_10732": null,
      "customfield_10767": null,
      "created": "2025-05-18T10:41:14.343+0200",
      "customfield_10691": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "As an API consumer"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "I want to to be able to request a specific IMAGE node"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "So I can find out its URL to actually see the photo"
              }
            ]
          }
        ]
      },
      "description": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Request",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "method: "
                      },
                      {
                        "type": "text",
                        "text": "GET",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "URL path: "
                      },
                      {
                        "type": "text",
                        "text": "/images/<ID>",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      },
                      {
                        "type": "text",
                        "text": " "
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Response ",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "happy path",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "positive HTTP status code (200)"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "a JSON with the meta information, the user data and the imported data:"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "id",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": integer"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "external_id",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "image_provider",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "name",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "description",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string/null"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "creator",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "license",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "tags",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string/null"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "source",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "image_url_original",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "image_url_xxl",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string/null"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "image_url_xl",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string/null"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "image_url_l",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string/null"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "image_url_m",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string/null"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "image_url_s",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string/null"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "image_url_xs",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string/null"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "created_at",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "updated_at",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "unhappy path",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "negative HTTP status code (404)"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "a plain text response stating the problem"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Acceptance Criteria",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Behavior (Business logic)",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "an existing node can be loaded successfully → 200"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "error when a non-existing node is requested → 404"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Quality Gates",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Unit+Integration tests (Jest) are extended (100% coverage combined)"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Behavior tests (Cucumber) are added (100% coverage)"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "OpenAPI spec is extended"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "schema is still valid"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Bruno collection is extended"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Performance tests are extended"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "tests are still green"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "NOT in scope for this iteration",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "relationships with other nodes (e.g. car models or company)"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "proper JSON structure according to the JSON:API"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "updated": "2025-08-21T14:07:23.004+0200"
    }
  },
  {
    "expand": "renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations",
    "id": "18565",
    "self": "https://dennis-gerike.atlassian.net/rest/api/3/issue/18565",
    "key": "MCA-75",
    "fields": {
      "summary": "Create IMAGE Node",
      "customfield_10731": "/images",
      "customfield_10732": {
        "self": "https://dennis-gerike.atlassian.net/rest/api/3/customFieldOption/10187",
        "value": "POST",
        "id": "10187"
      },
      "customfield_10767": [
        {
          "self": "https://dennis-gerike.atlassian.net/rest/api/3/customFieldOption/10220",
          "value": "201",
          "id": "10220"
        },
        {
          "self": "https://dennis-gerike.atlassian.net/rest/api/3/customFieldOption/10221",
          "value": "400",
          "id": "10221"
        }
      ],
      "created": "2025-05-18T10:40:32.804+0200",
      "customfield_10691": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "As an API contributor"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "I want to be able to create IMAGE nodes"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "So I can later use them to illustrate other nodes"
              }
            ]
          }
        ]
      },
      "description": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "For the time being, More Cars will "
              },
              {
                "type": "text",
                "text": "not",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              },
              {
                "type": "text",
                "text": " host any images, but will use the infrastructure of platforms like wikimedia and flickr. Meaning, all photos will be hotlinked. As a result of that, the user only has to provide a reference to the external photos. The remaining information will automatically be pulled from those platforms via API call."
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "In this first iteration the goal is just to create a foundation. Only dummy data will be created here. With "
              },
              {
                "type": "inlineCard",
                "attrs": {
                  "url": "https://dennis-gerike.atlassian.net/browse/MCA-87"
                }
              },
              {
                "type": "text",
                "text": " and "
              },
              {
                "type": "inlineCard",
                "attrs": {
                  "url": "https://dennis-gerike.atlassian.net/browse/MCA-88"
                }
              },
              {
                "type": "text",
                "text": " it will become possible to actually import real images from those platforms. "
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Request",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "method: "
                      },
                      {
                        "type": "text",
                        "text": "POST",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "URL path: "
                      },
                      {
                        "type": "text",
                        "text": "/images",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      },
                      {
                        "type": "text",
                        "text": " "
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "properties:"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "image_provider",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string, mandatory"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "external_id",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string, mandatory"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Response",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Happy path",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "positive HTTP status code (201)"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "a JSON with the meta information, the user data and the generated dummy data:"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "id",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": integer"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "external_id",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "image_provider",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "name",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string, (dummy-value)"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "description",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string/null, (dummy-value)"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "creator",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string, (dummy-value)"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "license",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string, (dummy-value)"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "tags",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string/null, (dummy-value)"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "source",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string, (dummy-value)"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "image_url_original",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string, (dummy-value)"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "image_url_xxl",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string/null, (dummy-value)"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "image_url_xl",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string/null, (dummy-value)"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "image_url_l",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string/null, (dummy-value)"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "image_url_m",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string/null, (dummy-value)"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "image_url_s",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string/null, (dummy-value)"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "image_url_xs",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string/null, (dummy-value)"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "created_at",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "updated_at",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Unhappy path",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "negative HTTP status code (400)"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "a plain text response stating the problem"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Acceptance Criteria",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Behavior (Business Logic)",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "the node is successfully created when provided with valid data "
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "in this first iteration data is accepted when both mandatory fields are filled with strings"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "when the request is malformed then code 400 is returned (incl. error message in plain text)"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "when mandatory fields are missing"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "when wrong data types were submitted"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "unknown properties are ignored (no error, no warning)"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "the properties that would be imported from the image platform are filled with dummy data for now"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Quality Gates",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Unit+Integration tests (Jest) are extended (100% coverage)"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Behavior tests (Cucumber) are added (100% coverage)"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "OpenAPI spec is extended"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "schema is still valid"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Bruno collection is extended"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Performance tests are extended"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "tests are still green"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "NOT in scope for this iteration",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "full validation"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "bulk create"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "versioning information"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "auth / security"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "proper JSON structure according to the JSON:API"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "updated": "2025-09-12T17:11:45.653+0200"
    }
  },
  {
    "expand": "renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations",
    "id": "18499",
    "self": "https://dennis-gerike.atlassian.net/rest/api/3/issue/18499",
    "key": "MCA-68",
    "fields": {
      "summary": "Get all BRAND-has-CAR MODEL Relationships",
      "customfield_10731": "/brands/<brand-id>/has-car-model",
      "customfield_10732": {
        "self": "https://dennis-gerike.atlassian.net/rest/api/3/customFieldOption/10186",
        "value": "GET",
        "id": "10186"
      },
      "customfield_10767": [
        {
          "self": "https://dennis-gerike.atlassian.net/rest/api/3/customFieldOption/10219",
          "value": "200",
          "id": "10219"
        }
      ],
      "created": "2025-05-14T10:54:24.381+0200",
      "customfield_10691": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "As an API consumer"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "I want to fetch the CAR MODELs that belong to a specific BRAND"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "So I can find out which models the BRAND has produced over the time"
              }
            ]
          }
        ]
      },
      "description": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Response",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Happy path",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "positive HTTP status code (200)"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "a JSON array containing the following relationship data for each item:"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "brand_id",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": integer"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "car_model_id",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": integer"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "relationship_id",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": integer"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "relationship_name",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Unhappy path",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "when there are no car models attached an empty array is returned (200)"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "404 when brand does not exist"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Acceptance Criteria",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Behavior (Business Logic)",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "all car model relationships for the specified brand are returned as a list"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "an empty list is returned when there are no car models attached to this brand"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "an error is returned when the brand could not be found"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "NOT in scope for this iteration",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "proper JSON structure according to the JSON:API"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "updated": "2025-08-21T13:54:48.066+0200"
    }
  },
  {
    "expand": "renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations",
    "id": "18497",
    "self": "https://dennis-gerike.atlassian.net/rest/api/3/issue/18497",
    "key": "MCA-67",
    "fields": {
      "summary": "Providing timestamps for all RELATIONSHIPs",
      "customfield_10731": null,
      "customfield_10732": null,
      "customfield_10767": null,
      "created": "2025-05-14T10:53:05.084+0200",
      "customfield_10691": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "As an API consumer"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "I want all RELATIONSHIPs to have timestamps"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "So I can assess how up-to-date the provided information is "
              }
            ]
          }
        ]
      },
      "description": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Background Information",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "For an API consumer the age of a relationship can be important information. Example use case: the user wants to fetch all relationships that have been created within the last 24 hours."
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "The database itself (Neo4j) does not create timestamps on its own. It needs to be handled by the app itself."
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "The Mission",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "The following properties have to be added to all relationships:"
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "created_at",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      },
                      {
                        "type": "text",
                        "text": ": string (ISO 8601 formatted)"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "updated_at",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      },
                      {
                        "type": "text",
                        "text": ":  string (ISO 8601 formatted)"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Whenever a new relationship is created the "
              },
              {
                "type": "text",
                "text": "created_at",
                "marks": [
                  {
                    "type": "code"
                  }
                ]
              },
              {
                "type": "text",
                "text": " field needs to be added and filled with the current timestamp. The "
              },
              {
                "type": "text",
                "text": "updated_at",
                "marks": [
                  {
                    "type": "code"
                  }
                ]
              },
              {
                "type": "text",
                "text": " field gets the exact copy. Whenever relationship data changes, the "
              },
              {
                "type": "text",
                "text": "updated_at",
                "marks": [
                  {
                    "type": "code"
                  }
                ]
              },
              {
                "type": "text",
                "text": " field needs to be updated accordingly. The "
              },
              {
                "type": "text",
                "text": "created_at",
                "marks": [
                  {
                    "type": "code"
                  }
                ]
              },
              {
                "type": "text",
                "text": " field will not be touched again."
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Acceptance Criteria",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Behavior (Business logic)",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "when creating a relationship"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "the response contains the two fields "
                              },
                              {
                                "type": "text",
                                "text": "created_at",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": " and "
                              },
                              {
                                "type": "text",
                                "text": "updated_at",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": " which are both filled with the time of creation (server time)"
                              }
                            ]
                          },
                          {
                            "type": "bulletList",
                            "content": [
                              {
                                "type": "listItem",
                                "content": [
                                  {
                                    "type": "paragraph",
                                    "content": [
                                      {
                                        "type": "text",
                                        "text": "formatted according to the ISO 8601 standard, e.g. “2007-04-05T14:30:00Z”"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "listItem",
                                "content": [
                                  {
                                    "type": "paragraph",
                                    "content": [
                                      {
                                        "type": "text",
                                        "text": "how those properties are handled and named in the database can be decided by the developer (ISO 8601 conformity not necessary, but the timestamps need to be transformable to it)"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "when the user provides the fields "
                              },
                              {
                                "type": "text",
                                "text": "created_at",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": " or "
                              },
                              {
                                "type": "text",
                                "text": "updated_at",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": " they will be ignored"
                              }
                            ]
                          },
                          {
                            "type": "bulletList",
                            "content": [
                              {
                                "type": "listItem",
                                "content": [
                                  {
                                    "type": "paragraph",
                                    "content": [
                                      {
                                        "type": "text",
                                        "text": "the request is accepted without error but those fields are not evaluated"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "when requesting a single relationship (e.g. get all car models of brand x)"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "the response contains the two fields "
                              },
                              {
                                "type": "text",
                                "text": "created_at",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": " and "
                              },
                              {
                                "type": "text",
                                "text": "updated_at",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": " which are both filled with the original time of creation"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "when requesting a list of relationships (get all brand-has-car-model relationships)"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "the response contains a list of all relationships, where each of them contains the two fields "
                              },
                              {
                                "type": "text",
                                "text": "created_at",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": " and "
                              },
                              {
                                "type": "text",
                                "text": "updated_at",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": " (with the original time of creation)"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "when updating a relationship"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "PLACEHOLDER (updating a relationship via API is not possible yet)"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Quality Gates",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Unit+Integration tests (Jest) are extended (100% coverage combined)"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Behavior tests (Cucumber) are added (100% coverage)"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "OpenAPI spec is extended"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "schema is still valid"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Bruno collection is extended"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Performance tests are extended"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "tests are still green"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "NOT in scope for this iteration",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "proper JSON structure according to the JSON:API"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "updating the “updated_at“ field because nodes cannot be updated via API yet"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "updated": "2025-08-22T17:06:53.794+0200"
    }
  },
  {
    "expand": "renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations",
    "id": "18403",
    "self": "https://dennis-gerike.atlassian.net/rest/api/3/issue/18403",
    "key": "MCA-38",
    "fields": {
      "summary": "Get BRAND Node by ID",
      "customfield_10731": "/brands/<brand-id>",
      "customfield_10732": {
        "self": "https://dennis-gerike.atlassian.net/rest/api/3/customFieldOption/10186",
        "value": "GET",
        "id": "10186"
      },
      "customfield_10767": [
        {
          "self": "https://dennis-gerike.atlassian.net/rest/api/3/customFieldOption/10219",
          "value": "200",
          "id": "10219"
        },
        {
          "self": "https://dennis-gerike.atlassian.net/rest/api/3/customFieldOption/10222",
          "value": "404",
          "id": "10222"
        }
      ],
      "created": "2025-05-06T10:20:00.347+0200",
      "customfield_10691": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "As an API consumer "
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "When I only have the ID of a brand"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "I want to be able to load that brand"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "So I can find out its name and other information"
              }
            ]
          }
        ]
      },
      "description": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Response ",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "happy path",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "positive HTTP status code (200)"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "a simple JSON with the ID and all core properties of the node:"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "id",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": integer"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "name",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "full_name",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string/null"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "founded",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": integer/null"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "defunct",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": integer/null"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "wmi",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string/null"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "hsn",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string/null"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "unhappy path",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "negative HTTP status code (404)"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "a plain text response stating the problem"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Acceptance Criteria",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Behavior (Business logic)",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "an existing node can be loaded successfully"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "error when a non-existing node is requested"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "NOT in scope for this iteration",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "meta information, like "
                      },
                      {
                        "type": "text",
                        "text": "created_at",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      },
                      {
                        "type": "text",
                        "text": " or "
                      },
                      {
                        "type": "text",
                        "text": "updated_at",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "relationships with other nodes (e.g. car models or company)"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "proper JSON structure according to the JSON:API"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "updated": "2025-08-21T13:50:03.269+0200"
    }
  },
  {
    "expand": "renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations",
    "id": "18337",
    "self": "https://dennis-gerike.atlassian.net/rest/api/3/issue/18337",
    "key": "MCA-20",
    "fields": {
      "summary": "Create BRAND-has-CAR MODEL Relationship",
      "customfield_10731": "/brands/<brand-id>/has-car-model/<car-model-id>",
      "customfield_10732": {
        "self": "https://dennis-gerike.atlassian.net/rest/api/3/customFieldOption/10187",
        "value": "POST",
        "id": "10187"
      },
      "customfield_10767": [
        {
          "self": "https://dennis-gerike.atlassian.net/rest/api/3/customFieldOption/10220",
          "value": "201",
          "id": "10220"
        },
        {
          "self": "https://dennis-gerike.atlassian.net/rest/api/3/customFieldOption/10222",
          "value": "404",
          "id": "10222"
        }
      ],
      "created": "2025-05-01T09:52:47.354+0200",
      "customfield_10691": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "As an API contributor"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "I want to be able to connect CAR MODELs to a BRAND"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "So I can create car families"
              }
            ]
          }
        ]
      },
      "description": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Response",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Happy path",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "positive HTTP status code (201)"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "a simple JSON confirming that both entities have been connected:"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "brand_id",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": integer"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "car_model_id",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": integer"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "relationship_id",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": integer"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "relationship_name",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Unhappy path",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "negative HTTP status code (404)"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "a plain text response stating the problem"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Acceptance Criteria",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Behavior (Business Logic)",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "the relationship is not created in error case"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "an error message when the provided data was not valid"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "404 when "
                              },
                              {
                                "type": "text",
                                "text": "brand",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": " or "
                              },
                              {
                                "type": "text",
                                "text": "car model",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": " were not found"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "the relationship is successfully created when provided with valid data"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "the user can trigger the creation of the same relationship over and over again"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "the result is always the same (idempotency)"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "the relation may be recreated in the database, but the "
                              },
                              {
                                "type": "text",
                                "text": "More Cars ID",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": " needs to stay the same"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "each brand can have multiple car models"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "when a new brand is assigned the original relationship will be removed"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Quality Gates",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Unit+Integration tests (Jest) are extended (100% coverage)"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Behavior tests (Cucumber) are added (100% coverage)"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "OpenAPI spec is extended"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "schema is still valid"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Bruno collection is extended"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Performance tests are extended"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "existing tests are still green"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "NOT in scope for this iteration",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "auth / security"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "proper JSON structure according to the JSON:API"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "returning the relationships in other places"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "deleting the relationship"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "updated": "2025-08-23T18:44:23.853+0200"
    }
  },
  {
    "expand": "renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations",
    "id": "18335",
    "self": "https://dennis-gerike.atlassian.net/rest/api/3/issue/18335",
    "key": "MCA-19",
    "fields": {
      "summary": "Get all BRAND Nodes",
      "customfield_10731": "/brands",
      "customfield_10732": {
        "self": "https://dennis-gerike.atlassian.net/rest/api/3/customFieldOption/10186",
        "value": "GET",
        "id": "10186"
      },
      "customfield_10767": null,
      "created": "2025-05-01T09:46:36.122+0200",
      "customfield_10691": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "As an API consumer "
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "I want to be able to load all BRANDs"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "So I can compare and analyze them without loading each individually"
              }
            ]
          }
        ]
      },
      "description": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Request",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "method: "
                      },
                      {
                        "type": "text",
                        "text": "GET",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "url path: "
                      },
                      {
                        "type": "text",
                        "text": "/brands",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      },
                      {
                        "type": "text",
                        "text": " "
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Response",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Happy path",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "positive HTTP status code (200)"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "a simple JSON with an array of all brands nodes, each having the following properties:"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "id",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": integer"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "name",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "full_name",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string/null"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "founded",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": integer/null"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "defunct",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": integer/null"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "wmi",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string/null"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "hsn",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string/null"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Unhappy path",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "n.a. → when there are no brands an empty array is returned → same status code (200)"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Acceptance Criteria",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Behavior (Business logic)",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "all existing nodes of that node type are returned as a list"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "an empty list is returned when there exist no nodes of that node type in the database"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Quality Gates",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Unit+Integration tests (Jest) are extended (100% coverage combined)"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Behavior tests (Cucumber) are added (100% coverage)"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "OpenAPI spec is extended"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "schema is still valid"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Bruno collection is extended"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Performance tests are extended"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "tests are still green"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "NOT in scope for this iteration",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "meta information, like "
                      },
                      {
                        "type": "text",
                        "text": "created_at",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      },
                      {
                        "type": "text",
                        "text": " or "
                      },
                      {
                        "type": "text",
                        "text": "updated_at",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "relationships with other nodes (e.g. car models or company)"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "proper JSON structure according to the JSON:API"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "sorting, filtering, pagination"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "updated": "2025-08-21T13:50:13.670+0200"
    }
  },
  {
    "expand": "renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations",
    "id": "18333",
    "self": "https://dennis-gerike.atlassian.net/rest/api/3/issue/18333",
    "key": "MCA-18",
    "fields": {
      "summary": "Create BRAND Node",
      "customfield_10731": "/brands",
      "customfield_10732": {
        "self": "https://dennis-gerike.atlassian.net/rest/api/3/customFieldOption/10187",
        "value": "POST",
        "id": "10187"
      },
      "customfield_10767": [
        {
          "self": "https://dennis-gerike.atlassian.net/rest/api/3/customFieldOption/10220",
          "value": "201",
          "id": "10220"
        },
        {
          "self": "https://dennis-gerike.atlassian.net/rest/api/3/customFieldOption/10221",
          "value": "400",
          "id": "10221"
        }
      ],
      "created": "2025-05-01T09:46:09.363+0200",
      "customfield_10691": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "As an API contributor"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "I want to be able to create BRANDs"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "So I can fill gaps in the database"
              }
            ]
          }
        ]
      },
      "description": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Response",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Happy path",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "positive HTTP status code (201)"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "a simple JSON with the ID and all core properties of the newly created node:"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "id",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": integer"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "name",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "full_name",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string/null"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "founded",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": integer/null"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "defunct",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": integer/null"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "wmi",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string/null"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "hsn",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string/null"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "created_at",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "updated_at",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": ": string"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Unhappy path",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "negative HTTP status code (400, 422)"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "a plain text response stating the problem"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Acceptance Criteria",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Behavior (Business Logic)",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "the node is not created in error case"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "400 when syntactical error"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "422 when semantical error"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "an error message when the provided data was not valid"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "the node is successfully created when provided with valid data"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "the response includes all properties, even when they are empty → value is returned as "
                              },
                              {
                                "type": "text",
                                "text": "null",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": " in this case"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "unknown properties in the request are ignored (no error, no warning)"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "NOT in scope for this iteration",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "bulk create"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "versioning information"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "auth / security"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "proper JSON structure according to the JSON:API"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "updated": "2025-09-12T17:11:28.619+0200"
    }
  },
  {
    "expand": "renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations",
    "id": "18331",
    "self": "https://dennis-gerike.atlassian.net/rest/api/3/issue/18331",
    "key": "MCA-17",
    "fields": {
      "summary": "Providing timestamps for all NODEs",
      "customfield_10731": null,
      "customfield_10732": null,
      "customfield_10767": null,
      "created": "2025-05-01T09:45:06.651+0200",
      "customfield_10691": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "As an API consumer"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "I want all nodes to have timestamps"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "So I can assess how up-to-date the provided information is "
              }
            ]
          }
        ]
      },
      "description": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Background",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "For an API consumer the age of a node or the last time a node was changed can be important information. Example use case: the user wants to fetch all nodes that have been touched within the last 24 hours."
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "In More Cars 1.0 each node has two timestamps - "
              },
              {
                "type": "text",
                "text": "created_at",
                "marks": [
                  {
                    "type": "code"
                  }
                ]
              },
              {
                "type": "text",
                "text": " and "
              },
              {
                "type": "text",
                "text": "updated_at",
                "marks": [
                  {
                    "type": "code"
                  }
                ]
              },
              {
                "type": "text",
                "text": ". They are stored in the database, but not exposed in the API. In the frontend they are only shown in the create/edit forms. The goal for More Cars 2.0 is to expose this information in all places where it makes sense."
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "The database itself (Neo4j) does not create those timestamps on its own. In More Cars 1.0 it is automatically created by the ORM. For More Cars 2.0 it needs to be handled by the app itself."
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Task",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "The following properties have to be added to all node types (currently only Car Models):"
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "created_at",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      },
                      {
                        "type": "text",
                        "text": ": string (ISO 8601 formatted)"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "updated_at",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      },
                      {
                        "type": "text",
                        "text": ":  string (ISO 8601 formatted)"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Whenever a new node is created the "
              },
              {
                "type": "text",
                "text": "created_at",
                "marks": [
                  {
                    "type": "code"
                  }
                ]
              },
              {
                "type": "text",
                "text": " field needs to be filled with the current timestamp. The "
              },
              {
                "type": "text",
                "text": "updated_at",
                "marks": [
                  {
                    "type": "code"
                  }
                ]
              },
              {
                "type": "text",
                "text": " field gets the exact copy. When the user edits an entry the "
              },
              {
                "type": "text",
                "text": "updated_at",
                "marks": [
                  {
                    "type": "code"
                  }
                ]
              },
              {
                "type": "text",
                "text": " field is updated accordingly. The "
              },
              {
                "type": "text",
                "text": "created_at",
                "marks": [
                  {
                    "type": "code"
                  }
                ]
              },
              {
                "type": "text",
                "text": " field will not be touched again."
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Acceptance Criteria",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Behavior (Business logic)",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "when creating a node"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "the response contains the two fields "
                              },
                              {
                                "type": "text",
                                "text": "created_at",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": " and "
                              },
                              {
                                "type": "text",
                                "text": "updated_at",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": " which are both filled with the time of creation (server time)"
                              }
                            ]
                          },
                          {
                            "type": "bulletList",
                            "content": [
                              {
                                "type": "listItem",
                                "content": [
                                  {
                                    "type": "paragraph",
                                    "content": [
                                      {
                                        "type": "text",
                                        "text": "formatted according to the ISO 8601 standard, e.g. “2007-04-05T14:30”"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "listItem",
                                "content": [
                                  {
                                    "type": "paragraph",
                                    "content": [
                                      {
                                        "type": "text",
                                        "text": "how those properties are handled and named in the database can be decided by the developer (ISO 8601 conformity not necessary, but the timestamps need to be transformable to it)"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "when the user provides the fields "
                              },
                              {
                                "type": "text",
                                "text": "created_at",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": " or "
                              },
                              {
                                "type": "text",
                                "text": "updated_at",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": " they will be ignored"
                              }
                            ]
                          },
                          {
                            "type": "bulletList",
                            "content": [
                              {
                                "type": "listItem",
                                "content": [
                                  {
                                    "type": "paragraph",
                                    "content": [
                                      {
                                        "type": "text",
                                        "text": "the request is accepted without error but those fields are not evaluated"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "when requesting a single node (e.g. “get car model by id“)"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "the response contains the two fields "
                              },
                              {
                                "type": "text",
                                "text": "created_at",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": " and "
                              },
                              {
                                "type": "text",
                                "text": "updated_at",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": " which are both filled with the original time of creation"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "when requesting a list of nodes (e.g. “get all car models“)"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "the response contains a list of all nodes, where each of them contain the two fields "
                              },
                              {
                                "type": "text",
                                "text": "created_at",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": " and "
                              },
                              {
                                "type": "text",
                                "text": "updated_at",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": " (with the original time of creation)"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "when updating a node"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "PLACEHOLDER (updating a node via API is not possible yet)"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Quality Gates",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Unit+Integration tests (Jest) are extended (100% coverage combined)"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Behavior tests (Cucumber) are added (100% coverage)"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "OpenAPI spec is extended"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "schema is still valid"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Bruno collection is extended"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Performance tests are extended"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "tests are still green"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "NOT in scope for this iteration",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "proper JSON structure according to the JSON:API"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "updating the “updated_at“ field because nodes cannot be updated via API yet"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "panel",
            "content": [
              {
                "type": "paragraph",
                "content": [
                  {
                    "type": "text",
                    "text": "No migration is needed for the existing Car Model nodes. There is no persisted production database yet. Test databases can be reset."
                  }
                ]
              }
            ],
            "attrs": {
              "panelType": "warning"
            }
          }
        ]
      },
      "updated": "2025-06-10T13:02:56.372+0200"
    }
  },
  {
    "expand": "renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations",
    "id": "18329",
    "self": "https://dennis-gerike.atlassian.net/rest/api/3/issue/18329",
    "key": "MCA-16",
    "fields": {
      "summary": "Providing every CORE information for a CAR MODEL",
      "customfield_10731": null,
      "customfield_10732": null,
      "customfield_10767": null,
      "created": "2025-05-01T09:44:35.445+0200",
      "customfield_10691": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "As an API consumer"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "I want to get every core information for a car model"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "So I am not limited to its ID and name"
              }
            ]
          }
        ]
      },
      "description": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Background",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "In the first iteration of the Car Model implementation ("
              },
              {
                "type": "text",
                "text": "MCA-1",
                "marks": [
                  {
                    "type": "link",
                    "attrs": {
                      "href": "https://dennis-gerike.atlassian.net/browse/MCA-1"
                    }
                  }
                ]
              },
              {
                "type": "text",
                "text": ") the nodes only got a name and an ID. This was to reduce complexity, to focus on the essentials and to get a working solution as fast as possible."
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Task",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Now, that there exists a foundation we can add the “remaining“ properties. Meaning, all core properties that already exist in More Cars 1.0."
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Core Properties",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "The following list of properties has to be added to the Car Models:"
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "built_from",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      },
                      {
                        "type": "text",
                        "text": ": integer"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "built_to",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      },
                      {
                        "type": "text",
                        "text": ": integer"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "generation",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      },
                      {
                        "type": "text",
                        "text": ": integer"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "internal_code",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      },
                      {
                        "type": "text",
                        "text": ": string"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "total_production",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      },
                      {
                        "type": "text",
                        "text": ": integer "
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Acceptance Criteria",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Behavior (Business logic)",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "when creating a car model the user can provide the new core properties (alongside the old ones)"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "they will be saved in the node analog to the "
                              },
                              {
                                "type": "text",
                                "text": "name",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": " or "
                              },
                              {
                                "type": "text",
                                "text": "id",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "they will be returned in the 201-response analog to the "
                              },
                              {
                                "type": "text",
                                "text": "name",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": " or "
                              },
                              {
                                "type": "text",
                                "text": "id",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "when requesting a car model all core properties are returned"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "applies to all routes: “get car model by id”, “get all car models”"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "core properties are always returned, even when they are not set"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "value is returned as "
                              },
                              {
                                "type": "text",
                                "text": "null",
                                "marks": [
                                  {
                                    "type": "code"
                                  }
                                ]
                              },
                              {
                                "type": "text",
                                "text": " in this case"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "invalid properties are ignored (no error, no warning)"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Quality Gates",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Unit+Integration tests (Jest) are extended (100% coverage combined)"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Behavior tests (Cucumber) are added (100% coverage)"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "OpenAPI spec is extended"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "schema is still valid"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Bruno collection is extended"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Performance tests are extended"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "tests are still green"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "NOT in scope for this iteration",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "meta information, like "
                      },
                      {
                        "type": "text",
                        "text": "created_at",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      },
                      {
                        "type": "text",
                        "text": " or "
                      },
                      {
                        "type": "text",
                        "text": "updated_at",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "data validation (only data types → but we get that for free from TypeScript)"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "proper JSON structure according to the JSON:API"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "panel",
            "content": [
              {
                "type": "paragraph",
                "content": [
                  {
                    "type": "text",
                    "text": "No migration is needed for the existing Car Model nodes. Neo4j doesn’t store null-values, therefore a migration would not change the data in any way. Also there is no persisted production database yet."
                  }
                ]
              }
            ],
            "attrs": {
              "panelType": "warning"
            }
          }
        ]
      },
      "updated": "2025-08-21T14:17:06.305+0200"
    }
  },
  {
    "expand": "renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations",
    "id": "18286",
    "self": "https://dennis-gerike.atlassian.net/rest/api/3/issue/18286",
    "key": "MCA-3",
    "fields": {
      "summary": "Get all CAR MODEL Nodes",
      "customfield_10731": null,
      "customfield_10732": null,
      "customfield_10767": null,
      "created": "2024-08-26T09:36:30.347+0200",
      "customfield_10691": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "As an API consumer "
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "I want to be able to load all car models"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "So I can compare and analyze them without loading each individually"
              }
            ]
          }
        ]
      },
      "description": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Request",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "method: "
                      },
                      {
                        "type": "text",
                        "text": "GET",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "url path: "
                      },
                      {
                        "type": "text",
                        "text": "/car-models",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      },
                      {
                        "type": "text",
                        "text": " "
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Response",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Happy path",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "positive HTTP status code (200)"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "a simple JSON with an array of all car model nodes:"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "id: integer"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "name: string"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Unhappy path",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "n.a. → when there are no car models an empty array is returned → same status code (200)"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "NOT in scope for this iteration",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "other core properties, like "
                      },
                      {
                        "type": "text",
                        "text": "built_from",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      },
                      {
                        "type": "text",
                        "text": " and "
                      },
                      {
                        "type": "text",
                        "text": "built_to",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      },
                      {
                        "type": "text",
                        "text": " "
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "meta information, like created_at or updated_at"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "auth / security"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "proper JSON structure according to the JSON:API"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "relationships with other nodes (e.g. brands or car model variants)"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "specific ordering or configurable ordering → the database decides"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "pagination"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Acceptance Criteria",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Behavior (Business logic)",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "all existing car models are returned as a list"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "an empty list is returned when there exist no car models in the database"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Quality Gates",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Unit+Integration tests (Jest) are extended (100% coverage combined)"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Behavior tests (Cucumber) are added (100% coverage)"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "OpenAPI spec is extended"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "schema is still valid"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Bruno collection is extended"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "updated": "2025-08-17T13:06:57.092+0200"
    }
  },
  {
    "expand": "renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations",
    "id": "18285",
    "self": "https://dennis-gerike.atlassian.net/rest/api/3/issue/18285",
    "key": "MCA-2",
    "fields": {
      "summary": "Get CAR MODEL Node by ID",
      "customfield_10731": "/car-models/<car-model-id>",
      "customfield_10732": {
        "self": "https://dennis-gerike.atlassian.net/rest/api/3/customFieldOption/10186",
        "value": "GET",
        "id": "10186"
      },
      "customfield_10767": [
        {
          "self": "https://dennis-gerike.atlassian.net/rest/api/3/customFieldOption/10219",
          "value": "200",
          "id": "10219"
        },
        {
          "self": "https://dennis-gerike.atlassian.net/rest/api/3/customFieldOption/10222",
          "value": "404",
          "id": "10222"
        }
      ],
      "created": "2024-08-26T09:34:18.426+0200",
      "customfield_10691": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "As an API consumer "
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "When I have the ID of an unknown car model"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "I want to be able to load that car model"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "So I can find out the name and its other properties"
              }
            ]
          }
        ]
      },
      "description": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Response ",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "happy path",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "positive HTTP status code (200)"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "a simple JSON with the following properties:"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "id: integer (mandatory field)"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "name: string (mandatory field)"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "unhappy path",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "negative HTTP status code (404)"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "a plain text response stating the problem"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "NOT in scope for this iteration",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "other core properties, like "
                      },
                      {
                        "type": "text",
                        "text": "built_from",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      },
                      {
                        "type": "text",
                        "text": " and "
                      },
                      {
                        "type": "text",
                        "text": "built_to",
                        "marks": [
                          {
                            "type": "code"
                          }
                        ]
                      },
                      {
                        "type": "text",
                        "text": " "
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "meta information, like created_at or updated_at"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "auth / security"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "proper JSON structure according to the JSON:API"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "relationships with other nodes (e.g. brands or car model variants)"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Acceptance Criteria",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Behavior (Business logic)",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "an existing car model can be loaded successfully"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "error when a non-existing car model is requested"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "updated": "2025-08-17T13:06:37.487+0200"
    }
  },
  {
    "expand": "renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations",
    "id": "18284",
    "self": "https://dennis-gerike.atlassian.net/rest/api/3/issue/18284",
    "key": "MCA-1",
    "fields": {
      "summary": "Create CAR MODEL Node",
      "customfield_10731": "/car-models",
      "customfield_10732": {
        "self": "https://dennis-gerike.atlassian.net/rest/api/3/customFieldOption/10187",
        "value": "POST",
        "id": "10187"
      },
      "customfield_10767": [
        {
          "self": "https://dennis-gerike.atlassian.net/rest/api/3/customFieldOption/10220",
          "value": "201",
          "id": "10220"
        },
        {
          "self": "https://dennis-gerike.atlassian.net/rest/api/3/customFieldOption/10221",
          "value": "400",
          "id": "10221"
        }
      ],
      "created": "2024-08-26T09:33:23.694+0200",
      "customfield_10691": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "As an API contributor"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "I want to be able to create car models"
              },
              {
                "type": "hardBreak"
              },
              {
                "type": "text",
                "text": "So I can fill gaps in the database"
              }
            ]
          }
        ]
      },
      "description": {
        "type": "doc",
        "version": 1,
        "content": [
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Response",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Happy path",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "positive HTTP status code (201)"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "a simple JSON with the following properties of the newly created node:"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "id: integer"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "name: string"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Unhappy path",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "negative HTTP status code (400, 422)"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "a plain text response stating the problem"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "NOT in scope for this iteration",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "validations (except check for mandatory fields)"
                      }
                    ]
                  },
                  {
                    "type": "bulletList",
                    "content": [
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "duplicate IDs"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "listItem",
                        "content": [
                          {
                            "type": "paragraph",
                            "content": [
                              {
                                "type": "text",
                                "text": "invalid data types"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "creating multiple car models at once (bulk create)"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "meta information"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "versioning information"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "auth / security"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "proper JSON structure according to the JSON:API"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "heading",
            "attrs": {
              "level": 1
            },
            "content": [
              {
                "type": "text",
                "text": "Acceptance Criteria",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Behavior (Business Logic)",
                "marks": [
                  {
                    "type": "strong"
                  }
                ]
              }
            ]
          },
          {
            "type": "bulletList",
            "content": [
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "the car model is successfully created when provided with valid data"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "an error when the provided data was not valid"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "listItem",
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "the car model is not created in error case"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "updated": "2025-09-12T17:11:25.656+0200"
    }
  }
]
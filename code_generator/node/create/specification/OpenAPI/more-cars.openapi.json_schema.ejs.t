---
inject: true
to: specification/OpenAPI/more-cars.openapi.json
after: \"schemas\"
skip_if: \"<%= h.changeCase.pascal(nodeType) %>\"
---
<%
    const schemaProperties = {}

    schemaProperties['id'] = {
        type: "integer",
        readOnly: true,
        description: "A unique identifier which is generated by the system. Cannot be changed.",
        example: "1234"
    }

    schemaProperties['created_at'] = {
        type: "string",
        readOnly: true,
        description: "Timestamp for when this node was created. Generated by the system. Cannot be changed.",
        format: "date-time",
        example: "2025-05-14T11:05:07.793Z"
    }

    schemaProperties['updated_at'] = {
        type: "string",
        readOnly: true,
        description: "Timestamp for when this node was last modified. Generated by the system.",
        format: "date-time",
        example: "2025-05-14T11:05:07.793Z"
    }

    for (prop in properties) {
        schemaProperties[prop] = {
            type: properties[prop].datatype,
            description: "",
            example: properties[prop].example,
        }
    }

    const requiredProperties = []
    for (prop in properties) {
        if (properties[prop].mandatory) {
            requiredProperties.push(prop)
        }
    }
-%>
      "<%= h.changeCase.pascal(nodeType) %>": {
        "type": "object",
        "required": <%- JSON.stringify(requiredProperties, null, 2).split('\n').map(line => '        ' + line).join('\n') %>,
        "properties": <%- JSON.stringify(schemaProperties, null, 2).split('\n').map(line => '        ' + line).join('\n') %>
      },
      "<%= h.changeCase.pascal(nodeType) %>Response": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/<%= h.changeCase.pascal(nodeType) %>"
          }
        }
      },
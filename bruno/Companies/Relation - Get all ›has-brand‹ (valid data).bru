meta {
  name: Get all ›has-brand‹ relations (valid data)
  type: http
  tags: [
    get
    relation
    collection
    valid
  ]
}

get {
  url: {{baseUrl}}/companies/{{validCompanyId}}/has-brand
  body: none
  auth: none
}

assert {
  res.status: 200
  res.body: isJson
  res.body.data: isArray
  res.body.data[0].data: isJson
  res.body.data[0].data.relationship_id: gte 12000000
  res.body.data[0].data.relationship_name: has-brand
  res.body.data[0].data.relationship_partner: isJson
  res.body.data[0].data.relationship_partner.node_type: brand
  res.body.data[0].data.relationship_partner.data.id: gte 12000000
  res.body.data[0].data.created_at: isString
  res.body.data[0].data.updated_at: isString
}

script:pre-request {
  await lib.Companies.ensureCompanyHasBrandRelationshipExists()
}

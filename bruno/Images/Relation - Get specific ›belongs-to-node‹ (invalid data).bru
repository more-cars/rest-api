meta {
  name: Get specific ›belongs-to-node‹ relation (invalid data)
  type: http
  tags: [
    get
    relation
    invalid
  ]
}

get {
  url: {{baseUrl}}/images/{{invalidImageId}}/belongs-to-node/{{validBrandId}}
  body: none
  auth: none
}

assert {
  res.status: 404
  res.body: isString
}

script:pre-request {
  await lib.Brands.ensureValidBrandExists()
}

script:pre-request {
  lib.tools.generateInvalidId('Image')
}

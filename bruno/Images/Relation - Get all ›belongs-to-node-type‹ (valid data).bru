meta {
  name: Get all ›belongs-to-node-type‹ relations (valid data)
  type: http
  tags: [
    get
    relation
    collection
    valid
  ]
}

get {
  url: {{baseUrl}}/images/{{validImageId}}/belongs-to-node-type
  body: none
  auth: none
}

assert {
  res.status: 200
  res.body: isJson
  res.body.data.companies.data: isArray
  res.body.data.brands.data: isArray
  res.body.data.car_models.data: isArray
  res.body.data.car_models.data[0].data.relationship_id: gte 12000000
  res.body.data.car_models.data[0].data.relationship_name: has-image
  res.body.data.car_models.data[0].data.relationship_partner: isJson
  res.body.data.car_models.data[0].data.relationship_partner.node_type: car-model
  res.body.data.car_models.data[0].data.relationship_partner.data.id: gte 12000000
  res.body.data.car_models.data[0].data.created_at: isString
  res.body.data.car_models.data[0].data.updated_at: isString
}

script:pre-request {
  await lib.Images.ensureImageBelongsToNodeRelationshipExists()
}

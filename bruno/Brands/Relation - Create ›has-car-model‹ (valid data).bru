meta {
  name: Create ›has-car-model‹ relation (valid data)
  type: http
}

post {
  url: {{baseUrl}}/brands/{{validBrandId}}/has-car-model/{{validCarModelId}}
  body: none
  auth: none
}

assert {
  res.status: 201
  res.body: isJson
  res.body.data.relationship_id: gte 12000000
  res.body.data.relationship_name: has-car-model
  res.body.data.relationship_partner: isJson
  res.body.data.relationship_partner.node_type: car-model
  res.body.data.relationship_partner.data.id: {{validCarModelId}}
  res.body.data.created_at: isString
  res.body.data.updated_at: isString
}

script:pre-request {
  await lib.Brands.ensureValidBrandExists()
  await lib.CarModels.ensureValidCarModelExists()
}
